{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Example-NestedWebServers Template. This is an example of an auto-scaled web server based application, showing installation and configuration via cfn-init, using the Nested Stack model to separate Resources into logical groups.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [
            "VPCStackName",
            "StandardTopicsStackName"
          ]
        },
        {
          "Label" : { "default" : "Resource Dependencies" },
          "Parameters" : [
            "KeyName"
          ]
        },
        {
          "Label" : { "default" : "Template Configuration" },
          "Parameters" : [
            "TemplatesBucket",
            "TemplatesFolder"
          ]
        },
        {
          "Label" : { "default" : "System Configuration" },
          "Parameters" : [
            "CompanyName",
            "SystemName"
          ]
        },
        {
          "Label" : { "default" : "Environment Configuration" },
          "Parameters" : [
            "EnvironmentSize",
            "InstanceOS"
          ]
        },
        {
          "Label" : { "default" : "Application Configuration" },
          "Parameters" : [
            "ApplicationsBucket",
            "ApplicationName",
            "ApplicationDomain",
            "ApplicationVersion",
            "UseLogMonitoring",
            "LogRetention",
            "UseSchedule",
            "NormalSchedule",
            "ReducedSchedule"
          ]
        },
        {
          "Label" : { "default" : "Security Configuration" },
          "Parameters" : [
            "AdministratorNetwork",
            "AdministratorNetwork1",
            "AdministratorNetwork2",
            "AdministratorNetwork3",
            "PublicNetwork",
            "PublicNetwork1",
            "PublicNetwork2",
            "PublicNetwork3",
            "PrivateNetwork",
            "PrivateNetwork1",
            "PrivateNetwork2",
            "PrivateNetwork3"
          ]
        }
      ],

      "ParameterLabels" : {
        "VPCStackName" : { "default" : "VPC Stack Name" },
        "StandardTopicsStackName" : { "default" : "StandardTopics Stack Name" },
        "KeyName" : { "default" : "Key Name" },
        "TemplatesBucket" : { "default" : "Templates Bucket" },
        "TemplatesFolder" : { "default" : "Templates Folder" },
        "CompanyName" : { "default" : "Company Name" },
        "SystemName" : { "default" : "System Name" },
        "EnvironmentSize" : { "default" : "Environment Size" },
        "InstanceOS" : { "default" : "Instance Operating System" },
        "ApplicationsBucket" : { "default" : "Applications Bucket" },
        "ApplicationName" : { "default" : "Application Name" },
        "ApplicationDomain" : { "default" : "Application Domain Name" },
        "ApplicationVersion" : { "default" : "Application Version" },
        "UseLogMonitoring" : { "default" : "Use Log Monitoring" },
        "LogRetention" : { "default" : "Log Retention" },
        "UseSchedule" : { "default" : "Use Schedule" },
        "NormalSchedule" : { "default" : "Normal Schedule" },
        "ReducedSchedule" : { "default" : "Reduced Schedule" },
        "AdministratorNetwork" : { "default" : "Administrator Network" },
        "AdministratorNetwork1" : { "default" : "Additional Administrator Network 1" },
        "AdministratorNetwork2" : { "default" : "Additional Administrator Network 2" },
        "AdministratorNetwork3" : { "default" : "Additional Administrator Network 3" },
        "PublicNetwork" : { "default" : "Public Network" },
        "PublicNetwork1" : { "default" : "Additional Public Network 1" },
        "PublicNetwork2" : { "default" : "Additional Public Network 2" },
        "PublicNetwork3" : { "default" : "Additional Public Network 3" },
        "PrivateNetwork" : { "default" : "Private Network" },
        "PrivateNetwork1" : { "default" : "Additional Private Network 1" },
        "PrivateNetwork2" : { "default" : "Additional Private Network 2" },
        "PrivateNetwork3" : { "default" : "Additional Private Network 3" }
      }
    }
  },

  "Parameters" : {
    "VPCStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the VPC",
      "Type" : "String",
      "MinLength" : 8,
      "MaxLength" : 64,
      "Default" : "Production-VPC",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "StandardTopicsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing Standard Topics",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "StandardTopics",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "KeyName" : {
      "Description" : "Name of an existing KeyPair to enable SSH access to the Instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "MaxLength" : 32,
      "Default" : "example",
      "AllowedPattern" : "(^$|^[_a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "TemplatesBucket" : {
      "Description" : "S3 bucket containing Templates referenced by this Template",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "templates-us-west-2-irops",
      "AllowedPattern" : "^[a-z][-a-z0-9]*$",
      "ConstraintDescription" : "must begin with a lower case letter and contain only lower case letters, numbers and dashes."
    },

    "TemplatesFolder" : {
      "Description" : "Folder within the S3 bucket containing Templates referenced by this Template",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "example",
      "AllowedPattern" : "^[-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must contain alphanumeric characters and dashes."
    },

    "CompanyName" : {
      "Description" : "Name of the Company associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "Travel",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "SystemName" : {
      "Description" : "Name of the System associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "IROPS",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "EnvironmentSize" : {
      "Description" : "Size of the Environment to build. Used to select size-related options in Mappings",
      "Type" : "String",
      "Default" : "micro",
      "AllowedValues" : [ "micro", "small", "medium", "large", "xlarge" ],
      "ConstraintDescription" : "must be micro, small, medium, large or xlarge."
    },

    "InstanceOS" : {
      "Description" : "The Operating System to use for Instances",
      "Type" : "String",
      "Default" : "AMZN",
      "AllowedValues" : [ "AMZN", "RHEL", "UBNT" ],
      "ConstraintDescription" : "must be AMZN = \"Amazon Linux 2016.09.1\", RHEL = \"RHEL 7.3\" or UBNT = \"Ubuntu 16.04\"."
    },

    "ApplicationsBucket" : {
      "Description" : "S3 bucket containing Applications to be deployed",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[a-z][-a-z0-9]*$)",
      "ConstraintDescription" : "must begin with a lower case letter and contain only lower case letters, numbers and dashes."
    },

    "ApplicationName" : {
      "Description" : "Name of the Application associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "NestedWebServers",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "ApplicationDomain" : {
      "Description" : "DNS Name of the Application associated with the Stack",
      "Type" : "String",
      "MaxLength" : 16,
      "Default" : "",
      "AllowedPattern" : "(^$|^[a-z][-a-z0-9]*$)",
      "ConstraintDescription" : "must begin with a lower case letter and contain only lower case letters, numbers and dashes."
    },

    "ApplicationVersion" : {
      "Description" : "Version of the Application",
      "Type" : "String",
      "MinLength" : 5,
      "MaxLength" : 32,
      "Default" : "1.0.0",
      "AllowedPattern" : "^[0-9]*.[0-9]*.[0-9]*(-[a-zA-Z0-9][-a-zA-Z0-9]*)?$",
      "ConstraintDescription" : "must follow semantic versioning conventions."
    },

    "UseLogMonitoring" : {
      "Description" : "Send Logs to CloudWatch Logs",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "LogRetention" : {
      "Description" : "Number of days to retain log events",
      "Type" : "Number",
      "Default" : 14,
      "AllowedValues" : [ 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653 ],
      "ConstraintDescription" : "must be: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827 or 3653."
    },

    "UseSchedule" : {
      "Description" : "Use a Schedule to start and stop the Bastions",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "NormalSchedule" : {
      "Description" : "Normal Schedule in constrained Cron format (UTC)",
      "Type" : "String",
      "Default" : "0 11 * * 1-5",
      "AllowedPattern" : "(^0 ([5-9]|1[0-6]) \\* \\* 1-5$)",
      "ConstraintDescription" : "must follow constrained cron syntax: \"0 H * * 1-5\", where H = 5-16."
    },

    "ReducedSchedule" : {
      "Description" : "Off Schedule in constrained Cron format (UTC)",
      "Type" : "String",
      "Default" : "0 4 * * *",
      "AllowedPattern" : "(^0 [0-7] \\* \\* \\*$)",
      "ConstraintDescription" : "must follow constrained cron syntax: \"0 H * * *\", where H = 0-7."
    },

    "AdministratorNetwork" : {
      "Description" : "Network that can administer the Application",
      "Type" : "String",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "AdministratorNetwork1" : {
      "Description" : "Additional network that can administer the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "AdministratorNetwork2" : {
      "Description" : "Additional network that can administer the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "AdministratorNetwork3" : {
      "Description" : "Additional network that can administer the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PublicNetwork" : {
      "Description" : "Public network that can access the Application",
      "Type" : "String",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PublicNetwork1" : {
      "Description" : "Additional public network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PublicNetwork2" : {
      "Description" : "Additional public network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PublicNetwork3" : {
      "Description" : "Additional public network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PrivateNetwork" : {
      "Description" : "Private network that can access the Application",
      "Type" : "String",
      "Default" : "10.0.0.0/16",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateNetwork1" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateNetwork2" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateNetwork3" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    }
  },

  "Conditions" : {
    "ConfigureGlobalS3" : { "Fn::Equals" : [{ "Ref" : "AWS::Region" }, "us-east-1" ]},
    "ConfigureLogs" : { "Fn::Equals" : [{ "Ref" : "UseLogMonitoring" }, "true" ]},
    "ConfigureDomainNames" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "ApplicationDomain" }, "" ]}]}
  },

  "Resources" : {
    "Role" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, { "Ref" : "TemplatesFolder" }, "/Example-NestedWebServers-Role.json" ]]},
        "Parameters" : {
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "UseLogMonitoring" : { "Ref" : "UseLogMonitoring" }
        }
      }
    },

    "SecurityGroups" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplatesFolder" }, "/Example-NestedWebServers-SecurityGroups.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "AdministratorNetwork" : { "Ref" : "AdministratorNetwork" },
          "AdministratorNetwork1" : { "Ref" : "AdministratorNetwork1" },
          "AdministratorNetwork2" : { "Ref" : "AdministratorNetwork2" },
          "AdministratorNetwork3" : { "Ref" : "AdministratorNetwork3" },
          "PublicNetwork" : { "Ref" : "PublicNetwork" },
          "PublicNetwork1" : { "Ref" : "PublicNetwork1" },
          "PublicNetwork2" : { "Ref" : "PublicNetwork2" },
          "PublicNetwork3" : { "Ref" : "PublicNetwork3" },
          "PrivateNetwork" : { "Ref" : "PrivateNetwork" },
          "PrivateNetwork1" : { "Ref" : "PrivateNetwork1" },
          "PrivateNetwork2" : { "Ref" : "PrivateNetwork2" },
          "PrivateNetwork3" : { "Ref" : "PrivateNetwork3" }
        }
      }
    },

    "Logs" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplatesFolder" }, "/Example-NestedWebServers-Logs.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "SystemName" : { "Ref" : "SystemName" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "UseLogMonitoring" : { "Ref" : "UseLogMonitoring" },
          "LogRetention" : { "Ref" : "LogRetention" }
        }
      },
      "Condition" : "ConfigureLogs"
    },

    "LoadBalancer" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplatesFolder" }, "/Example-NestedWebServers-LoadBalancer.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "LoadBalancerSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.LoadBalancerSecurityGroup" ]},
          "ApplicationName" : { "Ref" : "ApplicationName" }
        }
      }
    },

    "Instances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplatesFolder" }, "/Example-NestedWebServers-Instances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "Role" : { "Fn::GetAtt" : [ "Role", "Outputs.Role" ]},
          "InstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.InstanceSecurityGroup" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "LoadBalancer" : { "Fn::GetAtt" : [ "LoadBalancer", "Outputs.LoadBalancer" ]},
          "EnvironmentSize" : { "Ref" : "EnvironmentSize" },
          "InstanceOS" : { "Ref" : "InstanceOS" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationDomain" : { "Ref" : "ApplicationDomain" },
          "ApplicationVersion" : { "Ref" : "ApplicationVersion" },
          "UseLogMonitoring" : { "Ref" : "UseLogMonitoring" },
          "UseSchedule" : { "Ref" : "UseSchedule" },
          "NormalSchedule" : { "Ref" : "NormalSchedule" },
          "ReducedSchedule" : { "Ref" : "ReducedSchedule" }
        }
      }
    },

    "DomainNames" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplatesFolder" }, "/Example-NestedWebServers-DomainNames.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "LoadBalancerHostedZoneId" : { "Fn::GetAtt" : [ "LoadBalancer", "Outputs.LoadBalancerHostedZoneId" ]},
          "LoadBalancerDNSName" : { "Fn::GetAtt" : [ "LoadBalancer", "Outputs.LoadBalancerDNSName" ]},
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationDomain" : { "Ref" : "ApplicationDomain" }
        }
      },
      "Condition" : "ConfigureDomainNames"
    }
  },

  "Outputs" : {
    "LoadBalancerSecurityGroup" : {
      "Description" : "The LoadBalancer SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.LoadBalancerSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-LoadBalancerSecurityGroup" }}
    },

    "InstanceSecurityGroup" : {
      "Description" : "The Instance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.InstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-InstanceSecurityGroup" }}
    },

    "URL" : {
      "Description" : "The Sample Website URL",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Ref" : "ApplicationDomain" }, ".", { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCDomain" }}, "/" ]]},
      "Condition" : "ConfigureDomainNames"
    }
  }
}
