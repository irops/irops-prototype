#!/bin/bash
#
# Here's a list of the commands which need to be run to create the Training MultiEnvironment (eu-west-1 / Ireland)
# - Training is a MultiEnvironment which consists of a complete set of Environments used for
#   training new AWS Solution Architects and Administrators on a top-to-bottom build of a
#   new MultiEnvironment.
# - Training should usually not be left running. Create it to confirm all scripts work, then delete.
#
# We can break down the creation of a region into this order:
#  1. Initialize Environment Variables
#
#  2. Create SNS Topics and Subscriptions
#      2.1 Create StandardTopics Stack
#      2.2 Create StandardSubscriptions Stack
#      2.3 Create CustomSubscriptions Stack
#
#  3. Create S3 Buckets
#      3.1 Create StandardBuckets Stack
#
#  4. Create Lambda Functions
#      4.1 Create StandardAMIFunctions Stack
#      4.2 Create StandardCIDRFunctions Stack
#      4.3 Create StandardScheduleFunctions Stack
#      4.4 Create CustomIdentifierFunctions Stack
#
#  5. Create VPCs
#      5.1. Create Build-VPC Stack
#      5.2. Create Core-VPC Stack
#      5.3. Create Development-VPC Stack
#      5.4. Create Testing-VPC Stack
#      5.5. Create Staging-VPC Stack
#      5.6. Create Production-VPC Stack
#
#  6. Create NetworkACLs
#      6.1. Create Build-NetworkAcls Stack
#      6.2. Create Core-NetworkAcls Stack
#      6.3. Create Development-NetworkAcls Stack
#      6.4. Create Testing-NetworkAcls Stack
#      6.5. Create Staging-NetworkAcls Stack
#      6.6. Create Production-NetworkAcls Stack
#
#  7. Create CustomerGateways
#      7.1. Create CharlotteCustomerGateway Stack
#      7.2. Create SantaBarbaraCustomerGateway Stack
#
#  8. Create VPNConnections
#      8.1. Create Build-CharlotteVPNConnection Stack
#      8.2. Create Build-SantaBarbaraVPNConnection Stack
#      8.3. Create Core-CharlotteVPNConnection Stack
#      8.4. Create Core-SantaBarbaraVPNConnection Stack
#      8.5. Create Development-CharlotteVPNConnection Stack
#      8.6. Create Development-SantaBarbaraVPNConnection Stack
#      8.7. Create Testing-CharlotteVPNConnection Stack
#      8.8. Create Testing-SantaBarbaraVPNConnection Stack
#      8.9. Create Staging-CharlotteVPNConnection Stack
#      8.10. Create Staging-SantaBarbaraVPNConnection Stack
#      8.11. Create Production-CharlotteVPNConnection Stack
#      8.12. Create Production-SantaBarbaraVPNConnection Stack
#
# 9. Create VPCPeeringConnections
#     9.1. Create Core-VPCPeeringConnections Stack
#     9.4. Create Testing-DevelopmentVPCPeeringConnection Stack
#     9.3. Create Staging-TestingVPCPeeringConnection Stack
#     9.2. Create Production-StagingVPCPeeringConnection Stack
#
# 10. Create ActiveDirectory Instances
#     10.1. Create Build-ActiveDirectory Stack
#     10.2. Create Core-ActiveDirectory Stack
#     10.3. Create Development-ActiveDirectory Stack
#     10.4. Create Testing-ActiveDirectory Stack
#     10.5. Create Staging-ActiveDirectory Stack
#     10.6. Create Production-ActiveDirectory Stack
#
# 11. Create OpenVPNAS Instances
#     11.1. Create Build-OpenVPNAS Stack
#     11.2. Create Core-OpenVPNAS Stack
#     11.3. Create Development-OpenVPNAS Stack
#     11.4. Create Testing-OpenVPNAS Stack
#     11.5. Create Staging-OpenVPNAS Stack
#     11.6. Create Production-OpenVPNAS Stack
#
# 12. Create LinuxBastions Instances (Only in Unstable)
#     12.1. Create Build-LinuxBastions Stack
#     12.2. Create Core-LinuxBastions Stack
#     12.3. Create Development-LinuxBastions Stack
#     12.4. Create Testing-LinuxBastions Stack
#     12.5. Create Staging-LinuxBastions Stack
#     12.6. Create Production-LinuxBastions Stack
#
# 13. Create WindowsBastions Instances (Only in Unstable)
#     13.1. Create Build-WindowsBastions Stack
#     13.2. Create Core-WindowsBastions Stack
#     13.3. Create Development-WindowsBastions Stack
#     13.4. Create Testing-WindowsBastions Stack
#     13.5. Create Staging-WindowsBastions Stack
#     13.6. Create Production-WindowsBastions Stack
#
# 14. Create Octopus Instances
#     14.1. Create Core-Octopus-Deploy Stack
#     14.2. Create Staging-Octopus-Deploy Stack
#     14.3. Create Production-Octopus-Deploy Stack
#
# 15. Create WebSphereMQ Instances
#     15.1. Create Core-WebSphereMQ Stack
#     15.2. Create Production-WebSphereMQ Stack
#
# 16. Create RabbitMQ Instances
#     16.1. Create Development-RabbitMQ Stack
#     16.2. Create Testing-RabbitMQ Stack
#     16.3. Create Staging-RabbitMQ Stack
#     16.4. Create Production-RabbitMQ Stack
#
# 17. Create MongoDB Instances
#     17.1. Create Development-MongoDB Stack
#     17.2. Create Testing-MongoDB Stack
#     17.3. Create Staging-MongoDB Stack
#     17.4. Create Production-MongoDB Stack
#
# 18. Create Engine Instances
#     18.1. Create Development-Engine-Monitoring Stack
#     18.2. Create Development-Engine-Publishing Stack
#     18.3. Create Development-Engine-DataStaging Stack
#     18.4. Create Development-Engine-Calculation Stack
#     18.5. Create Development-Engine-Web Stack
#     18.6. Create Testing-Engine-Monitoring Stack
#     18.7. Create Testing-Engine-Publishing Stack
#     18.8. Create Testing-Engine-DataStaging Stack
#     18.9. Create Testing-Engine-Calculation Stack
#     18.10. Create Testing-Engine-Web Stack
#     18.11. Create Staging-Engine-Monitoring Stack
#     18.12. Create Staging-Engine-Publishing Stack
#     18.13. Create Staging-Engine-DataStaging Stack
#     18.14. Create Staging-Engine-Calculation Stack
#     18.15. Create Staging-Engine-Web Stack
#     18.16. Create Production-Engine-Monitoring Stack
#     18.17. Create Production-Engine-Publishing Stack
#     18.18. Create Production-Engine-DataStaging Stack
#     18.19. Create Production-Engine-Calculation Stack
#     18.20. Create Production-Engine-Web Stack
#

run() {
    echo
    echo -n "Run: \"${1##*/bin/}\"? [Y/n/q]"
    read choice
    case "$choice" in
      "" | "y" | "Y" | "yes" | "Yes")
        eval $1;;
      "n" | "N" | "no" | "No")
        ;;
       *) echo "cancelled"
          exit 2;;
    esac
}

#  1. Initalize Environment Variables
#     - This will initialze the environment variables to the Training-Production Environment
#     - We will be explicit on certain options below, even when the value does not need to be set due to defaults

bindir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
applicationbindir=${bindir%/*}/application/bin
billingbindir=${bindir%/*}/billing/bin
commonbindir=${bindir%/*}/common/bin
corebindir=${bindir%/*}/core/bin
environmentbindir=${bindir%/*}/environment/bin
examplebindir=${bindir%/*}/example/bin
identitybindir=${bindir%/*}/identity/bin
utilitybindir=${bindir%/*}/utility/bin

i="-i"
f="-ffff"


#  2. Create SNS Topics and Subscriptions
#      2.1 Create StandardTopics Stack
#      2.2 Create StandardSubscriptions Stack
#      2.3 Create CustomSubscriptions Stack

source $bindir/irops-define-training-production
run "$corebindir/core-create-standardtopics-stack -E Core -m $i $f"
run "$corebindir/core-create-standardsubscriptions-stack -E Core -m $i $f"
run "$corebindir/core-create-customsubscriptions-stack -E Core -m $i $f"


#  3. Create S3 Buckets
#      3.1 Create StandardBuckets Stack

source $bindir/irops-define-training-production
run "$corebindir/core-create-standardbuckets-stack -E Core -m $i $f"

echo
echo "Note: Currently, you must manually populate the following buckets with content:"
echo "      - scripts"
echo "      - products"
echo "      - configurations"
echo "      - examples"
echo "      - applications"
echo


#  4. Create Lambda Functions
#      4.1 Create StandardAMIFunctions Stack
#      4.2 Create StandardCIDRFunctions Stack
#      4.3 Create StandardScheduleFunctions Stack
#      4.4 Create CustomIdentifierFunctions Stack

source $bindir/irops-define-training-production
run "$corebindir/core-create-standardamifunctions-stack -E Core $i $f"
run "$corebindir/core-create-standardcidrfunctions-stack -E Core $i $f"
run "$corebindir/core-create-standardschedulefunctions-stack -E Core $i $f"
run "$corebindir/core-create-customidentifierfunctions-stack -E Core -m $i $f"


#  5. Create VPCs
#      5.1. Create Build-VPC Stack
#      5.2. Create Core-VPC Stack
#      5.3. Create Development-VPC Stack
#      5.4. Create Testing-VPC Stack
#      5.5. Create Staging-VPC Stack
#      5.6. Create Production-VPC Stack

source $bindir/irops-define-training-production
run "$corebindir/build-create-vpc-stack -E Build -N 172.21.188.0/23 -D b.eu-west-1.tvl.iropshub.com -d iropscmb.travel.svcs.entsvcs.com -b iropscmb $i $f"
run "$corebindir/core-create-vpc-stack -E Core -N 172.21.184.0/22 -D c.eu-west-1.tvl.iropshub.com -d iropscmc.travel.svcs.entsvcs.com -b iropscmc $i $f"
source $bindir/irops-define-training-development
run "$environmentbindir/environment-create-vpc-stack -E Development -N 172.21.152.0/21 -D d.eu-west-1.tvl.iropshub.com -d iropscmd.travel.svcs.entsvcs.com -b iropscmd $i $f"
source $bindir/irops-define-training-testing
run "$environmentbindir/environment-create-vpc-stack -E Testing -N 172.21.144.0/21 -D t.eu-west-1.tvl.iropshub.com -d iropscmt.travel.svcs.entsvcs.com -b iropscmt $i $f"
source $bindir/irops-define-training-staging
run "$environmentbindir/environment-create-vpc-stack -E Staging -N 172.21.136.0/21 -D s.eu-west-1.tvl.iropshub.com -d iropscms.travel.svcs.entsvcs.com -b iropscms $i $f"
source $bindir/irops-define-training-production
run "$environmentbindir/environment-create-vpc-stack -E Production -N 172.21.128.0/21 -D eu-west-1.tvl.iropshub.com -d iropscmp.travel.svcs.entsvcs.com -b iropscmp -m $i $f"

echo
echo "Note: Currently, you must manually create the NS records which are needed in each"
echo "      parent DNS Zone to delegate to the sub-domain Zone. This should be done now."
echo


#  6. Create NetworkACLs
#      6.1. Create Build-NetworkAcls Stack
#      6.2. Create Core-NetworkAcls Stack
#      6.3. Create Development-NetworkAcls Stack
#      6.4. Create Testing-NetworkAcls Stack
#      6.5. Create Staging-NetworkAcls Stack
#      6.6. Create Production-NetworkAcls Stack

source $bindir/irops-define-training-production
run "$corebindir/build-create-networkacls-stack -E Build $i $f"
run "$corebindir/core-create-networkacls-stack -E Core $i $f"
source $bindir/irops-define-training-development
run "$environmentbindir/environment-create-networkacls-stack -E Development $i $f"
source $bindir/irops-define-training-testing
run "$environmentbindir/environment-create-networkacls-stack -E Testing $i $f"
source $bindir/irops-define-training-staging
run "$environmentbindir/environment-create-networkacls-stack -E Staging $i $f"
source $bindir/irops-define-training-production
run "$environmentbindir/environment-create-networkacls-stack -E Production -m $i $f"


#  7. Create CustomerGateways
#      7.1. Create CharlotteCustomerGateway Stack
#      7.2. Create SantaBarbaraCustomerGateway Stack

source $bindir/irops-define-training-production
run "$commonbindir/common-create-customergateway-stack -E Core -G Charlotte -A 204.26.253.5 $i $f"
#run "$commonbindir/common-create-customergateway-stack -E Core -G SantaBarbara -A 72.215.187.179 -m $i $f"


#  8. Create VPNConnections
#      8.1. Create Build-CharlotteVPNConnection Stack
#      8.2. Create Build-SantaBarbaraVPNConnection Stack
#      8.3. Create Core-CharlotteVPNConnection Stack
#      8.4. Create Core-SantaBarbaraVPNConnection Stack
#      8.5. Create Development-CharlotteVPNConnection Stack
#      8.6. Create Development-SantaBarbaraVPNConnection Stack
#      8.7. Create Testing-CharlotteVPNConnection Stack
#      8.8. Create Testing-SantaBarbaraVPNConnection Stack
#      8.9. Create Staging-CharlotteVPNConnection Stack
#      8.10. Create Staging-SantaBarbaraVPNConnection Stack
#      8.11. Create Production-CharlotteVPNConnection Stack
#      8.12. Create Production-SantaBarbaraVPNConnection Stack

source $bindir/irops-define-training-production
run "$commonbindir/common-create-vpnconnection-stack -E Build -G Charlotte -N 204.26.128.0/17 $i $f"
#run "$commonbindir/common-create-vpnconnection-stack -E Build -G SantaBarbara -N 10.0.0.0/16 $i $f"
run "$commonbindir/common-create-vpnconnection-stack -E Core -G Charlotte -N 204.26.128.0/17 $i $f"
#run "$commonbindir/common-create-vpnconnection-stack -E Core -G SantaBarbara -N 10.0.0.0/16 $i $f"
source $bindir/irops-define-training-development
run "$commonbindir/common-create-vpnconnection-stack -E Development -G Charlotte -N 204.26.128.0/17 $i $f"
#run "$commonbindir/common-create-vpnconnection-stack -E Development -G SantaBarbara -N 10.0.0.0/16 $i $f"
source $bindir/irops-define-training-testing
run "$commonbindir/common-create-vpnconnection-stack -E Testing -G Charlotte -N 204.26.128.0/17 $i $f"
#run "$commonbindir/common-create-vpnconnection-stack -E Testing -G SantaBarbara -N 10.0.0.0/16 $i $f"
source $bindir/irops-define-training-staging
run "$commonbindir/common-create-vpnconnection-stack -E Staging -G Charlotte -N 204.26.128.0/17 $i $f"
#run "$commonbindir/common-create-vpnconnection-stack -E Staging -G SantaBarbara -N 10.0.0.0/16 $i $f"
source $bindir/irops-define-training-production
run "$commonbindir/common-create-vpnconnection-stack -E Production -G Charlotte -N 204.26.128.0/17 $i $f"
#run "$commonbindir/common-create-vpnconnection-stack -E Production -G SantaBarbara -N 10.0.0.0/16 -m $i $f"


# 9. Create VPCPeeringConnections
#     9.1. Create Core-VPCPeeringConnections Stack
#     9.4. Create Testing-DevelopmentVPCPeeringConnection Stack
#     9.3. Create Staging-TestingVPCPeeringConnection Stack
#     9.2. Create Production-StagingVPCPeeringConnection Stack

source $bindir/irops-define-training-production
run "$corebindir/core-create-vpcpeeringconnections-stack -m $i $f"
run "$environmentbindir/environment-create-vpcpeeringconnection-stack -E Testing -P Development $i $f"
run "$environmentbindir/environment-create-vpcpeeringconnection-stack -E Staging -P Testing $i $f"
run "$environmentbindir/environment-create-vpcpeeringconnection-stack -E Production -P Staging $i $f"


# 10. Create ActiveDirectory Instances
#     10.1. Create Build-ActiveDirectory Stack
#     10.2. Create Core-ActiveDirectory Stack
#     10.3. Create Development-ActiveDirectory Stack
#     10.4. Create Testing-ActiveDirectory Stack
#     10.5. Create Staging-ActiveDirectory Stack
#     10.6. Create Production-ActiveDirectory Stack

source $bindir/irops-define-training-production
run "$utilitybindir/utility-create-activedirectory-stack -E Build -T small -Z 2 $i $f"
run "$utilitybindir/utility-create-activedirectory-stack -E Core -T small -Z 2 $i $f"
source $bindir/irops-define-training-development
run "$utilitybindir/utility-create-activedirectory-stack -E Development -T small -Z 2 $i $f"
source $bindir/irops-define-training-testing
run "$utilitybindir/utility-create-activedirectory-stack -E Testing -T small -Z 2 $i $f"
source $bindir/irops-define-training-staging
run "$utilitybindir/utility-create-activedirectory-stack -E Staging -T small -Z 2 $i $f"
source $bindir/irops-define-training-production
run "$utilitybindir/utility-create-activedirectory-stack -E Production -T small -Z 2 -m $i $f"


# 11. Create OpenVPNAS Instances
#     11.1. Create Build-OpenVPNAS Stack
#     11.2. Create Core-OpenVPNAS Stack
#     11.3. Create Development-OpenVPNAS Stack
#     11.4. Create Testing-OpenVPNAS Stack
#     11.5. Create Staging-OpenVPNAS Stack
#     11.6. Create Production-OpenVPNAS Stack

source $bindir/irops-define-training-production
run "$utilitybindir/utility-create-openvpnas-stack -E Build -T micro $i $f"
run "$utilitybindir/utility-create-openvpnas-stack -E Core -T micro $i $f"
source $bindir/irops-define-training-development
run "$utilitybindir/utility-create-openvpnas-stack -E Development -T micro $i $f"
source $bindir/irops-define-training-testing
run "$utilitybindir/utility-create-openvpnas-stack -E Testing -T micro $i $f"
source $bindir/irops-define-training-staging
run "$utilitybindir/utility-create-openvpnas-stack -E Staging -T micro $i $f"
source $bindir/irops-define-training-production
run "$utilitybindir/utility-create-openvpnas-stack -E Production -T micro -m $i $f"


# 12. Create LinuxBastions Instances (Skip - Only in Unstable)


# 13. Create WindowsBastions Instances (Skip - Only in Unstable)


# 14. Create Octopus Instances
#     14.1. Create Core-Octopus-Deploy Stack
#     14.2. Create Staging-Octopus-Deploy Stack
#     14.3. Create Production-Octopus-Deploy Stack

source $bindir/irops-define-training-production
run "$applicationbindir/application-create-octopus-deploy-stack -E Core -T small $i $f"
source $bindir/irops-define-training-staging
run "$applicationbindir/application-create-octopus-deploy-stack -E Staging -T small $i $f"
source $bindir/irops-define-training-production
run "$applicationbindir/application-create-octopus-deploy-stack -E Production -T small -m $i $f"


# 15. Create WebSphereMQ Instances
#     15.1. Create Core-WebSphereMQ Stack
#     15.2. Create Production-WebSphereMQ Stack

source $bindir/irops-define-training-production
run "$applicationbindir/application-create-webspheremq-stack -E Core -T small $i $f"
run "$applicationbindir/application-create-webspheremq-stack -E Production -T small -m $i $f"


# 16. Create RabbitMQ Instances
#     16.1. Create Development-RabbitMQ Stack
#     16.2. Create Testing-RabbitMQ Stack
#     16.3. Create Staging-RabbitMQ Stack
#     16.4. Create Production-RabbitMQ Stack

source $bindir/irops-define-training-development
run "$applicationbindir/application-create-rabbitmq-stack -E Development -T small -Z 2 $i $f"
source $bindir/irops-define-training-testing
run "$applicationbindir/application-create-rabbitmq-stack -E Testing -T small -Z 1 $i $f"
source $bindir/irops-define-training-staging
run "$applicationbindir/application-create-rabbitmq-stack -E Staging -T small -Z 2 $i $f"
source $bindir/irops-define-training-production
run "$applicationbindir/application-create-rabbitmq-stack -E Production -T small -Z 2 -m $i $f"


# 17. Create MongoDB Instances
#     17.1. Create Development-MongoDB Stack
#     17.2. Create Testing-MongoDB Stack
#     17.3. Create Staging-MongoDB Stack
#     17.4. Create Production-MongoDB Stack

source $bindir/irops-define-training-development
run "$applicationbindir/application-create-mongodb-stack -E Development -T small -Z 2 $i $f"
source $bindir/irops-define-training-testing
run "$applicationbindir/application-create-mongodb-stack -E Testing -T small -Z 1 $i $f"
source $bindir/irops-define-training-staging
run "$applicationbindir/application-create-mongodb-stack -E Staging -T small -Z 2 $i $f"
source $bindir/irops-define-training-production
run "$applicationbindir/application-create-mongodb-stack -E Production -T small -Z 2 -m $i $f"


# 18. Create Engine Instances
#     18.1. Create Development-Engine-Monitoring Stack
#     18.2. Create Development-Engine-Publishing Stack
#     18.3. Create Development-Engine-DataStaging Stack
#     18.4. Create Development-Engine-Calculation Stack
#     18.5. Create Development-Engine-Web Stack
#     18.6. Create Testing-Engine-Monitoring Stack
#     18.7. Create Testing-Engine-Publishing Stack
#     18.8. Create Testing-Engine-DataStaging Stack
#     18.9. Create Testing-Engine-Calculation Stack
#     18.10. Create Testing-Engine-Web Stack
#     18.11. Create Staging-Engine-Monitoring Stack
#     18.12. Create Staging-Engine-Publishing Stack
#     18.13. Create Staging-Engine-DataStaging Stack
#     18.14. Create Staging-Engine-Calculation Stack
#     18.15. Create Staging-Engine-Web Stack
#     18.16. Create Production-Engine-Monitoring Stack
#     18.17. Create Production-Engine-Publishing Stack
#     18.18. Create Production-Engine-DataStaging Stack
#     18.19. Create Production-Engine-Calculation Stack
#     18.20. Create Production-Engine-Web Stack

source $bindir/irops-define-training-development
run "$applicationbindir/application-create-engine-monitoring-stack -E Development -T small -m $i $f"
run "$applicationbindir/application-create-engine-publishing-stack -E Development -T small -Z 1 $i $f"
run "$applicationbindir/application-create-engine-datastaging-stack -E Development -T small -Z 2 $i $f"
run "$applicationbindir/application-create-engine-calculation-stack -E Development -T small -Z 1 $i $f"
run "$applicationbindir/application-create-engine-web-stack -E Development -T small -Z 1 $i $f"
source $bindir/irops-define-training-testing
run "$applicationbindir/application-create-engine-monitoring-stack -E Testing -T small -m $i $f"
run "$applicationbindir/application-create-engine-publishing-stack -E Testing -T small -Z 1 $i $f"
run "$applicationbindir/application-create-engine-datastaging-stack -E Testing -T small -Z 1 $i $f"
run "$applicationbindir/application-create-engine-calculation-stack -E Testing -T small -Z 1 $i $f"
run "$applicationbindir/application-create-engine-web-stack -E Testing -T small -Z 2 $i $f"
source $bindir/irops-define-training-staging
run "$applicationbindir/application-create-engine-monitoring-stack -E Staging -T small -m $i $f"
run "$applicationbindir/application-create-engine-publishing-stack -E Staging -T small -Z 2 $i $f"
run "$applicationbindir/application-create-engine-datastaging-stack -E Staging -T small -Z 2 $i $f"
run "$applicationbindir/application-create-engine-calculation-stack -E Staging -T small -Z 2 $i $f"
run "$applicationbindir/application-create-engine-web-stack -E Staging -T small -Z 2 $i $f"
source $bindir/irops-define-training-production
run "$applicationbindir/application-create-engine-monitoring-stack -E Production -T small -m $i $f"
run "$applicationbindir/application-create-engine-publishing-stack -E Production -T small -Z 2 $i $f"
run "$applicationbindir/application-create-engine-datastaging-stack -E Production -T small -Z 2 $i $f"
run "$applicationbindir/application-create-engine-calculation-stack -E Production -T small -Z 2 $i $f"
run "$applicationbindir/application-create-engine-web-stack -E Production -T small -Z 2 -m $i $f"
