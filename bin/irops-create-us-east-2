#!/bin/bash
#
# Here's a list of the commands which need to be run to create us-east-2 (Ohio)
#
# We can break down the creation of a region into this order:
#  1. Initialize Environment
#
#  2. Create SNS Topics and Subscriptions
#      2.1 Create StandardTopics Stack
#      2.2 Create StandardSubscriptions Stack
#      2.3 Create CustomSubscriptions Stack
#
#  3. Create S3 Buckets
#      3.1 Create StandardBuckets Stack
#
#  4. Create Lambda Functions
#      4.1 Create StandardAMIFunctions Stack
#      4.2 Create StandardCIDRFunctions Stack
#
#  5. Create CustomerGateways
#      5.1. Create CharlotteCustomerGateway Stack
#      5.2. Create SantaBarbaraCustomerGateway Stack
#
#  6. Create Production Environment VPC
#      6.1. Create Production-HostedZone Stack (Public DNS Zone)
#      6.2. Create Production-VPC Stack
#      6.3. Create Production-NetworkAcls Stack
#
#  7. Create Staging Environment VPC
#      7.1. Create Staging-HostedZone Stack (Public DNS Zone)
#      7.2. Create Staging-VPC Stack
#      7.3. Create Staging-NetworkAcls Stack
#
#  8. Create Testing Environment VPC
#      8.1. Create Testing-HostedZone Stack (Public DNS Zone)
#      8.2. Create Testing-VPC Stack
#      8.3. Create Testing-NetworkAcls Stack
#
#  9. Create Development Environment VPC
#      9.1. Create Development-HostedZone Stack (Public DNS Zone)
#      9.2. Create Development-VPC Stack
#      9.3. Create Development-NetworkAcls Stack
#
# 10. Create Core Environment VPC
#     10.1. Create Core-VPC Stack
#     10.2. Create Core-NetworkAcls Stack
#
# 11. Create Build Environment VPC
#     11.1. Create Build-VPC Stack
#     11.2. Create Build-NetworkAcls Stack
#
# 12. Create VPCPeeringConnections
#     12.1. Create Core-VPCPeeringConnections Stack
#     12.2. Create Production-StagingVPCPeeringConnection Stack
#     12.3. Create Staging-TestingVPCPeeringConnection Stack
#     12.4. Create Testing-DevelopmentVPCPeeringConnection Stack
#
# 13. Create VPNConnections
#     13.1. Create Production-CharlotteVPNConnection Stack
#     13.2. Create Production-SantaBarbaraVPNConnection Stack
#     13.3. Create Staging-CharlotteVPNConnection Stack
#     13.4. Create Staging-SantaBarbaraVPNConnection Stack
#     13.5. Create Testing-CharlotteVPNConnection Stack
#     13.6. Create Testing-SantaBarbaraVPNConnection Stack
#     13.7. Create Development-CharlotteVPNConnection Stack
#     13.8. Create Development-SantaBarbaraVPNConnection Stack
#     13.9. Create Core-CharlotteVPNConnection Stack
#     13.10. Create Core-SantaBarbaraVPNConnection Stack
#     13.11. Create Build-CharlotteVPNConnection Stack
#     13.12. Create Build-SantaBarbaraVPNConnection Stack
#
# 14. Create Bastions
#     14.1. Create Production-LinuxBastions Stack
#     14.2. Create Production-WindowsBastions Stack (future)
#     14.3. Create Staging-LinuxBastions Stack
#     14.4. Create Staging-WindowsBastions Stack (future)
#     14.5. Create Testing-LinuxBastions Stack
#     14.6. Create Testing-WindowsBastions Stack (future)
#     14.7. Create Development-LinuxBastions Stack
#     14.8. Create Development-WindowsBastions Stack (future)
#     14.9. Create Build-LinuxBastions Stack
#     14.10. Create Build-WindowsBastions Stack (future)
#     14.11. Create Core-LinuxBastions Stack
#     14.12. Create Core-WindowsBastions Stack (future)
#
# 15. Create Example Applications
#     15.1. Create Production-WebServer Stack
#     15.2. Create Production-WebServers Stack (future)
#     15.3. Create Production-LinuxWordPress Stack (future)
#     15.4. Create Production-WindowsWordPress Stack (future)
#     15.5. Create Staging-WebServer Stack
#     15.6. Create Staging-WebServers Stack (future)
#     15.7. Create Staging-LinuxWordPress Stack (future)
#     15.8. Create Staging-WindowsWordPress Stack (future)
#     15.9. Create Testing-WebServer Stack
#     15.10. Create Testing-WebServers Stack (future)
#     15.11. Create Testing-LinuxWordPress Stack (future)
#     15.12. Create Testing-WindowsWordPress Stack (future)
#     15.13. Create Development-WebServer Stack
#     15.14. Create Development-WebServers Stack (future)
#     15.15. Create Development-LinuxWordPress Stack (future)
#     15.16. Create Development-WindowsWordPress Stack (future)
#

run() {
    echo
    echo -n "Run: \"${1##*/bin/}\"? [Y/n/q]"
    read choice
    case "$choice" in
      "" | "y" | "Y" | "yes" | "Yes")
        eval $1;;
      "n" | "N" | "no" | "No")
        ;;
       *) echo "cancelled"
          exit 2;;
    esac
}

#  1. Initalize Environment
#     - This will initialze the environment variables to the us-east-2 Production Environment
#     - We will be explicit on certain options below, even when the value does not need to be set due to defaults

bindir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
applicationbindir=${bindir%/*}/application/bin
billingbindir=${bindir%/*}/billing/bin
commonbindir=${bindir%/*}/common/bin
corebindir=${bindir%/*}/core/bin
environmentbindir=${bindir%/*}/environment/bin
examplebindir=${bindir%/*}/example/bin
identitybindir=${bindir%/*}/identity/bin
utilitybindir=${bindir%/*}/utility/bin

source $bindir/irops-define-us-east-2-production


#  2. Create SNS Topics and Subscriptions
#      2.1 Create StandardTopics Stack
#      2.2 Create StandardSubscriptions Stack
#      2.3 Create CustomSubscriptions Stack

run "$corebindir/core-create-standardtopics-stack -E Core"
run "$corebindir/core-create-standardsubscriptions-stack -E Core"
run "$corebindir/core-create-customsubscriptions-stack -E Core"


#  3. Create S3 Buckets
#      3.1 Create StandardBuckets Stack

run "$corebindir/core-create-standardbuckets-stack -E Core"


#  4. Create Lambda Functions
#      4.1 Create StandardAMIFunctions Stack
#      4.2 Create StandardCIDRFunctions Stack

run "$corebindir/core-create-standardamifunctions-stack -E Core"
run "$corebindir/core-create-standardcidrfunctions-stack -E Core"


#  5. Create CustomerGateways
#      5.1. Create CharlotteCustomerGateway Stack
#      5.2. Create SantaBarbaraCustomerGateway Stack

#run "$commonbindir/common-create-customergateway-stack -E Core -G Charlotte -i 204.26.253.5"
run "$commonbindir/common-create-customergateway-stack -E Core -G SantaBarbara -i 72.215.187.179"


#  6. Create Production Environment VPC
#      6.1. Create Production-HostedZone Stack (Public DNS Zone)
#      6.2. Create Production-VPC Stack
#      6.3. Create Production-NetworkAcls Stack

run "$environmentbindir/environment-create-hostedzone-stack -E Production -D us-east-2.tvl.iropshub.com"
run "$environmentbindir/environment-create-vpc-stack -E Production -N 172.21.64.0/21"
run "$environmentbindir/environment-create-networkacls-stack -E Production"


#  7. Create Staging Environment VPC
#      7.1. Create Staging-HostedZone Stack (Public DNS Zone)
#      7.2. Create Staging-VPC Stack
#      7.3. Create Staging-NetworkAcls Stack

run "$environmentbindir/environment-create-hostedzone-stack -E Staging -D s.us-east-2.tvl.iropshub.com"
run "$environmentbindir/environment-create-vpc-stack -E Staging -N 172.21.72.0/21"
run "$environmentbindir/environment-create-networkacls-stack -E Staging"


#  8. Create Testing Environment VPC
#      8.1. Create Testing-HostedZone Stack (Public DNS Zone)
#      8.2. Create Testing-VPC Stack
#      8.3. Create Testing-NetworkAcls Stack

run "$environmentbindir/environment-create-hostedzone-stack -E Testing -D t.us-east-2.tvl.iropshub.com"
run "$environmentbindir/environment-create-vpc-stack -E Testing -N 172.21.80.0/21"
run "$environmentbindir/environment-create-networkacls-stack -E Testing"


#  9. Create Development Environment VPC
#      9.1. Create Development-HostedZone Stack (Public DNS Zone)
#      9.2. Create Development-VPC Stack
#      9.3. Create Development-NetworkAcls Stack

run "$environmentbindir/environment-create-hostedzone-stack -E Development -D d.us-east-2.tvl.iropshub.com"
run "$environmentbindir/environment-create-vpc-stack -E Development -N 172.21.88.0/21"
run "$environmentbindir/environment-create-networkacls-stack -E Development"


# 10. Create Core Environment VPC
#     10.1. Create Core-VPC Stack
#     10.2. Create Core-NetworkAcls Stack

run "$corebindir/core-create-vpc-stack -E Core -N 172.21.120.0/22"
run "$corebindir/core-create-networkacls-stack -E Core"


# 11. Create Build Environment VPC
#     11.1. Create Build-VPC Stack
#     11.2. Create Build-NetworkAcls Stack

run "$corebindir/build-create-vpc-stack -E Build -N 172.21.124.0/23"
run "$corebindir/build-create-networkacls-stack -E Build"


# 12. Create VPCPeeringConnections
#     12.1. Create Core-VPCPeeringConnections Stack
#     12.2. Create Production-StagingVPCPeeringConnection Stack
#     12.3. Create Staging-TestingVPCPeeringConnection Stack
#     12.4. Create Testing-DevelopmentVPCPeeringConnection Stack

run "$corebindir/core-create-vpcpeeringconnections-stack"
run "$environmentbindir/environment-create-vpcpeeringconnection-stack -E Production -P Staging"
run "$environmentbindir/environment-create-vpcpeeringconnection-stack -E Staging -P Testing"
run "$environmentbindir/environment-create-vpcpeeringconnection-stack -E Testing -P Development"


# 13. Create VPNConnections
#     13.1. Create Production-CharlotteVPNConnection Stack
#     13.2. Create Production-SantaBarbaraVPNConnection Stack
#     13.3. Create Staging-CharlotteVPNConnection Stack
#     13.4. Create Staging-SantaBarbaraVPNConnection Stack
#     13.5. Create Testing-CharlotteVPNConnection Stack
#     13.6. Create Testing-SantaBarbaraVPNConnection Stack
#     13.7. Create Development-CharlotteVPNConnection Stack
#     13.8. Create Development-SantaBarbaraVPNConnection Stack
#     13.9. Create Core-CharlotteVPNConnection Stack
#     13.10. Create Core-SantaBarbaraVPNConnection Stack
#     13.11. Create Build-CharlotteVPNConnection Stack
#     13.12. Create Build-SantaBarbaraVPNConnection Stack

#run "$commonbindir/common-create-vpnconnection-stack -E Production -G Charlotte -N 204.26.128.0/17"
run "$commonbindir/common-create-vpnconnection-stack -E Production -G SantaBarbara -N 10.0.0.0/16"
#run "$commonbindir/common-create-vpnconnection-stack -E Staging -G Charlotte -N 204.26.128.0/17"
run "$commonbindir/common-create-vpnconnection-stack -E Staging -G SantaBarbara -N 10.0.0.0/16"
#run "$commonbindir/common-create-vpnconnection-stack -E Testing -G Charlotte -N 204.26.128.0/17"
run "$commonbindir/common-create-vpnconnection-stack -E Testing -G SantaBarbara -N 10.0.0.0/16"
#run "$commonbindir/common-create-vpnconnection-stack -E Development -G Charlotte -N 204.26.128.0/17"
run "$commonbindir/common-create-vpnconnection-stack -E Development -G SantaBarbara -N 10.0.0.0/16"
#run "$commonbindir/common-create-vpnconnection-stack -E Core -G Charlotte -N 204.26.128.0/17"
run "$commonbindir/common-create-vpnconnection-stack -E Core -G SantaBarbara -N 10.0.0.0/16"
#run "$commonbindir/common-create-vpnconnection-stack -E Build -G Charlotte -N 204.26.128.0/17"
run "$commonbindir/common-create-vpnconnection-stack -E Build -G SantaBarbara -N 10.0.0.0/16"


# 14. Create Bastions
#     14.1. Create Production-LinuxBastions Stack
#     14.2. Create Production-WindowsBastions Stack (future)
#     14.3. Create Staging-LinuxBastions Stack
#     14.4. Create Staging-WindowsBastions Stack (future)
#     14.5. Create Testing-LinuxBastions Stack
#     14.6. Create Testing-WindowsBastions Stack (future)
#     14.7. Create Development-LinuxBastions Stack
#     14.8. Create Development-WindowsBastions Stack (future)
#     14.9. Create Build-LinuxBastions Stack
#     14.10. Create Build-WindowsBastions Stack (future)
#     14.11. Create Core-LinuxBastions Stack
#     14.12. Create Core-WindowsBastions Stack (future)

run "$utilitybindir/utility-create-linuxbastions-stack -E Production -U LinuxBastions -D lbastion -Z micro"
#run "$utilitybindir/utility-create-windowsbastions-stack -E Production -U WindowsBastions -D wbastion"
run "$utilitybindir/utility-create-linuxbastions-stack -E Staging -U LinuxBastions -D lbastion -Z micro"
#run "$utilitybindir/utility-create-windowsbastions-stack -E Staging -U WindowsBastions -D wbastion"
run "$utilitybindir/utility-create-linuxbastions-stack -E Testing -U LinuxBastions -D lbastion -Z micro"
#run "$utilitybindir/utility-create-windowsbastions-stack -E Testing -U WindowsBastions -D wbastion"
run "$utilitybindir/utility-create-linuxbastions-stack -E Development -U LinuxBastions -D lbastion -Z micro"
#run "$utilitybindir/utility-create-windowsbastions-stack -E Development -U WindowsBastions -D wbastion"
run "$utilitybindir/utility-create-linuxbastions-stack -E Core -U LinuxBastions -D clbastion -Z micro"
#run "$utilitybindir/utility-create-windowsbastions-stack -E Core -U WindowsBastions -D cwbastion"
run "$utilitybindir/utility-create-linuxbastions-stack -E Build -U LinuxBastions -D blbastion -Z micro"
#run "$utilitybindir/utility-create-windowsbastions-stack -E Build -U WindowsBastions -D bwbastion"


# 15. Create Example Applications
#     15.1. Create Production-WebServer Stack
#     15.2. Create Production-WebServers Stack (future)
#     15.3. Create Production-LinuxWordPress Stack (future)
#     15.4. Create Production-WindowsWordPress Stack (future)
#     15.5. Create Staging-WebServer Stack
#     15.6. Create Staging-WebServers Stack (future)
#     15.7. Create Staging-LinuxWordPress Stack (future)
#     15.8. Create Staging-WindowsWordPress Stack (future)
#     15.9. Create Testing-WebServer Stack
#     15.10. Create Testing-WebServers Stack (future)
#     15.11. Create Testing-LinuxWordPress Stack (future)
#     15.12. Create Testing-WindowsWordPress Stack (future)
#     15.13. Create Development-WebServer Stack
#     15.14. Create Development-WebServers Stack (future)
#     15.15. Create Development-LinuxWordPress Stack (future)
#     15.16. Create Development-WindowsWordPress Stack (future)

run "$examplebindir/example-create-webserver-stack -E Production -A WebServer -V 1.0.0 -D ws -Z micro"
#run "$examplebindir/example-create-webservers-stack -E Production -A WebServers -V 1.0.0 -D bws"
#run "$examplebindir/example-create-linuxwordpress-stack -E Production -A LinuxWordPress -V 1.0.0 -D lblog"
#run "$examplebindir/example-create-windowswordpress-stack -E Production -A WindowsWordPress -V 1.0.0 -D wblog"

run "$examplebindir/example-create-webserver-stack -E Staging -A WebServer -V 2.0.0 -D ws -Z micro"
#run "$examplebindir/example-create-webservers-stack -E Staging -A WebServers -V 2.0.0 -D bws"
#run "$examplebindir/example-create-linuxwordpress-stack -E Staging -A LinuxWordPress -V 2.0.0 -D lblog"
#run "$examplebindir/example-create-windowswordpress-stack -E Staging -A WindowsWordPress -V 2.0.0 -D wblog"

run "$examplebindir/example-create-webserver-stack -E Testing -A WebServer -V 3.0.0 -D ws -Z micro"
#run "$examplebindir/example-create-webservers-stack -E Testing -A WebServers -V 3.0.0 -D bws"
#run "$examplebindir/example-create-linuxwordpress-stack -E Testing -A LinuxWordPress -V 3.0.0 -D lblog"
#run "$examplebindir/example-create-windowswordpress-stack -E Testing -A WindowsWordPress -V 3.0.0 -D wblog"

run "$examplebindir/example-create-webserver-stack -E Development -A WebServer -V 4.0.0 -D ws -Z micro"
#run "$examplebindir/example-create-webservers-stack -E Development -A WebServers -V 4.0.0 -D bws"
#run "$examplebindir/example-create-linuxwordpress-stack -E Development -A LinuxWordPress -V 4.0.0 -D lblog"
#run "$examplebindir/example-create-windowswordpress-stack -E Development -A WindowsWordPress -V 4.0.0 -D wblog"

