{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Application-Engine Template. This template creates the Engine Application, using the Nested Stack model to separate Resources into logical groups.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [
            "VPNStackName",
            "VPCStackName",
            "CustomIdentifierFunctionsStackName",
            "StandardCIDRFunctionsStackName",
            "StandardAMIFunctionsStackName",
            "StandardTopicsStackName"
          ]
        },
        {
          "Label" : { "default" : "Resource Dependencies" },
          "Parameters" : [
            "KeyName"
          ]
        },
        {
          "Label" : { "default" : "Template Configuration" },
          "Parameters" : [
            "TemplatesBucket",
            "TemplateFolder"
          ]
        },
        {
          "Label" : { "default" : "System Configuration" },
          "Parameters" : [
            "CompanyName",
            "SystemName"
          ]
        },
        {
          "Label" : { "default" : "Environment Configuration" },
          "Parameters" : [
            "EnvironmentSize",
            "LinuxOSName",
            "WindowsOSName"
          ]
        },
        {
          "Label" : { "default" : "Application Dependencies Configuration" },
          "Parameters" : [
            "ProductsBucket",
            "ProductFolder",
            "CalculationProductObject",
            "MongoDBProductObject",
            "RabbitMQProductObject",
            "DataStagingProductObject",
            "LoggingProductObject",
            "DeploymentProductObject",
            "PublishProductObject",
            "ConfigurationsBucket",
            "ConfigurationFolder",
            "WebConfigurationObject",
            "CalculationConfigurationObject",
            "MongoDBConfigurationObject",
            "RabbitMQConfigurationObject",
            "DataStagingConfigurationObject",
            "LoggingConfigurationObject",
            "DeploymentConfigurationObject",
            "PublishConfigurationObject"
          ]
        },
        {
          "Label" : { "default" : "Application Configuration" },
          "Parameters" : [
            "ApplicationsBucket",
            "ApplicationFolder",
            "WebApplicationObject",
            "CalculationApplicationObject",
            "MongoDBApplicationObject",
            "RabbitMQApplicationObject",
            "DataStagingApplicationObject",
            "LoggingApplicationObject",
            "DeploymentApplicationObject",
            "PublishApplicationObject",
            "ApplicationName",
            "ApplicationDomain",
            "ApplicationVersion",
            "UseStaticAddress",
            "LogRetention",
            "Schedule"
          ]
        },
        {
          "Label" : { "default" : "Security Configuration" },
          "Parameters" : [
            "PublicUserNetwork",
            "PublicUserNetwork1",
            "PublicUserNetwork2",
            "PrivateUserNetwork",
            "PrivateUserNetwork1",
            "PrivateUserNetwork2",
            "PrivateAdministratorNetwork",
            "PrivateAdministratorNetwork1",
            "PrivateAdministratorNetwork2"
          ]
        }
      ],

      "ParameterLabels" : {
        "VPNStackName" : { "default" : "VPN Stack Name" },
        "VPCStackName" : { "default" : "VPC Stack Name" },
        "CustomIdentifierFunctionsStackName" : { "default" : "CustomIdentifierFunctions Stack Name" },
        "StandardCIDRFunctionsStackName" : { "default" : "StandardCIDRFunctions Stack Name" },
        "StandardAMIFunctionsStackName" : { "default" : "StandardAMIFunctions Stack Name" },
        "StandardTopicsStackName" : { "default" : "StandardTopics Stack Name" },
        "KeyName" : { "default" : "Key Name" },
        "TemplatesBucket" : { "default" : "Templates Bucket" },
        "TemplateFolder" : { "default" : "Template Folder" },
        "CompanyName" : { "default" : "Company Name" },
        "SystemName" : { "default" : "System Name" },
        "EnvironmentSize" : { "default" : "Environment Size" },
        "LinuxOSName" : { "default" : "Linux Operating System Name" },
        "WindowsOSName" : { "default" : "Windows Operating System Name" },
        "ProductsBucket" : { "default" : "Products Bucket" },
        "ProductFolder" : { "default" : "Product Folder" },
        "CalculationProductObject" : { "default" : "Calculation Product Object" },
        "MongoDBProductObject" : { "default" : "MongoDB Product Object" },
        "RabbitMQProductObject" : { "default" : "RabbitMQ Product Object" },
        "DataStagingProductObject" : { "default" : "DataStaging Product Object" },
        "LoggingProductObject" : { "default" : "Logging Product Object" },
        "DeploymentProductObject" : { "default" : "Deployment Product Object" },
        "PublishProductObject" : { "default" : "Publish Product Object" },
        "ConfigurationsBucket" : { "default" : "Configurations Bucket" },
        "ConfigurationFolder" : { "default" : "Configuration Folder" },
        "WebConfigurationObject" : { "default" : "Web Configuration Object" },
        "CalculationConfigurationObject" : { "default" : "Calculation Configuration Object" },
        "MongoDBConfigurationObject" : { "default" : "MongoDB Configuration Object" },
        "RabbitMQConfigurationObject" : { "default" : "RabbitMQ Configuration Object" },
        "DataStagingConfigurationObject" : { "default" : "DataStaging Configuration Object" },
        "LoggingConfigurationObject" : { "default" : "Logging Configuration Object" },
        "DeploymentConfigurationObject" : { "default" : "Deployment Configuration Object" },
        "PublishConfigurationObject" : { "default" : "Publish Configuration Object" },
        "ApplicationsBucket" : { "default" : "Applications Bucket" },
        "ApplicationFolder" : { "default" : "Application Folder" },
        "WebApplicationObject" : { "default" : "Web Application Object" },
        "CalculationApplicationObject" : { "default" : "Calculation Application Object" },
        "MongoDBApplicationObject" : { "default" : "MongoDB Application Object" },
        "RabbitMQApplicationObject" : { "default" : "RabbitMQ Application Object" },
        "DataStagingApplicationObject" : { "default" : "DataStaging Application Object" },
        "LoggingApplicationObject" : { "default" : "Logging Application Object" },
        "DeploymentApplicationObject" : { "default" : "Deployment Application Object" },
        "PublishApplicationObject" : { "default" : "Publish Application Object" },
        "ApplicationName" : { "default" : "Application Name" },
        "ApplicationDomain" : { "default" : "Application Domain Name" },
        "ApplicationVersion" : { "default" : "Application Version" },
        "UseStaticAddress" : { "default" : "Use Static Address" },
        "LogRetention" : { "default" : "Log Retention" },
        "Schedule" : { "default" : "Schedule" },
        "PublicUserNetwork" : { "default" : "Public User Network" },
        "PublicUserNetwork1" : { "default" : "Additional Public User Network 1" },
        "PublicUserNetwork2" : { "default" : "Additional Public User Network 2" },
        "PrivateUserNetwork" : { "default" : "Private User Network" },
        "PrivateUserNetwork1" : { "default" : "Additional Private User Network 1" },
        "PrivateUserNetwork2" : { "default" : "Additional Private User Network 2" },
        "PrivateAdministratorNetwork" : { "default" : "Private Administrator Network" },
        "PrivateAdministratorNetwork1" : { "default" : "Additional Private Administrator Network 1" },
        "PrivateAdministratorNetwork2" : { "default" : "Additional Private Administrator Network 2" }
      }
    }
  },

  "Parameters" : {
    "VPNStackName" : {
      "Description" : "Name of the CloudFormation Stack containing VPN Instances",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "Production-OpenVPN",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "VPCStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the VPC",
      "Type" : "String",
      "MinLength" : 8,
      "MaxLength" : 64,
      "Default" : "Production-VPC",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "CustomIdentifierFunctionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Custom Identifier Functions",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "CustomIdentifierFunctions",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "StandardCIDRFunctionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Standard CIDR Functions",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "StandardCIDRFunctions",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "StandardAMIFunctionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Standard AMI Functions",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "StandardAMIFunctions",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "StandardTopicsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing Standard Topics",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "StandardTopics",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "KeyName" : {
      "Description" : "Name of an existing KeyPair to enable SSH access to the Instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "MaxLength" : 32,
      "Default" : "administrator",
      "AllowedPattern" : "(^$|^[_a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "TemplatesBucket" : {
      "Description" : "S3 bucket containing Templates referenced by this Template",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "templates-us-west-2-irops",
      "AllowedPattern" : "^[a-z][-a-z0-9]*$",
      "ConstraintDescription" : "must begin with a lower case letter and contain only lower case letters, numbers and dashes."
    },

    "TemplateFolder" : {
      "Description" : "Folder within the S3 bucket containing Templates referenced by this Template",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "application",
      "AllowedPattern" : "^[-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must contain alphanumeric characters and dashes."
    },

    "CompanyName" : {
      "Description" : "Name of the Company associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "Travel",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "SystemName" : {
      "Description" : "Name of the System associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "IROPS",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "EnvironmentSize" : {
      "Description" : "Size of the Environment to build. Used to select size-related options in Mappings",
      "Type" : "String",
      "Default" : "small",
      "AllowedValues" : [ "small", "medium", "large", "xlarge" ],
      "ConstraintDescription" : "must be small, medium, large or xlarge."
    },

    "LinuxOSName" : {
      "Description" : "The Operating System to use for Linux Instances",
      "Type" : "String",
      "Default" : "Amazon Linux",
      "AllowedValues" : [ "Amazon Linux", "Amazon Linux 2017.03.0", "RHEL 7", "RHEL 7.4", "RHEL 7.3" ],
      "ConstraintDescription" : "must be \"Amazon Linux\" (latest), \"Amazon Linux 2017.03.0\", \"RHEL 7\" (latest), \"RHEL 7.4\" or \"RHEL 7.3\"."
    },

    "WindowsOSName" : {
      "Description" : "The Operating System to use for Windows Instances",
      "Type" : "String",
      "Default" : "Windows Server 2012 R2",
      "AllowedValues" : [ "Windows Server 2012 R2", "Windows Server 2016" ],
      "ConstraintDescription" : "must be \"Windows Server 2012 R2\" or \"Windows Server 2016\"."
    },

    "ProductsBucket" : {
      "Description" : "S3 bucket containing 3rd-Party Products to be deployed",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "products-us-west-2-production",
      "AllowedPattern" : "^[a-z][-a-z0-9]*$",
      "ConstraintDescription" : "must begin with a lower case letter and contain only lower case letters, numbers and dashes."
    },

    "ProductFolder" : {
      "Description" : "Folder within the S3 bucket containing Products deployed by this Template",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "Engine",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "CalculationProductObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Calculation Component installer",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "MongoDBProductObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine MongoDB Component installer",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "RabbitMQProductObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine RabbitMQ Component installer",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "DataStagingProductObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine DataStaging Component installer",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "LoggingProductObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Logging Component installer",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "DeploymentProductObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Deployment Component installer",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "PublishProductObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Publish Component installer",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "ConfigurationsBucket" : {
      "Description" : "S3 bucket containing Configurations to be deployed",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "configurations-us-west-2-irops",
      "AllowedPattern" : "^[a-z][-a-z0-9]*$",
      "ConstraintDescription" : "must begin with a lower case letter and contain only lower case letters, numbers and dashes."
    },

    "ConfigurationFolder" : {
      "Description" : "Folder within the S3 bucket containing Configurations deployed by this Template",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "Engine",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "WebConfigurationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Web Component configuration",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "CalculationConfigurationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Calculation Component configuration",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "MongoDBConfigurationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine MongoDB Component configuration",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "RabbitMQConfigurationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine RabbitMQ Component configuration",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "DataStagingConfigurationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine DataStaging Component configuration",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "LoggingConfigurationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Logging Component configuration",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "DeploymentConfigurationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Deployment Component configuration",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "PublishConfigurationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Publish Component configuration",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "ApplicationsBucket" : {
      "Description" : "S3 bucket containing Applications to be deployed",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "applications-us-west-2-irops",
      "AllowedPattern" : "^[a-z][-a-z0-9]*$",
      "ConstraintDescription" : "must begin with a lower case letter and contain only lower case letters, numbers and dashes."
    },

    "ApplicationFolder" : {
      "Description" : "Folder within the S3 bucket containing Applications deployed by this Template",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "Engine",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "WebApplicationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Web Component application",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "CalculationApplicationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Calculation Component application",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "MongoDBApplicationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine MongoDB Component application",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "RabbitMQApplicationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine RabbitMQ Component application",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "DataStagingApplicationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine DataStaging Component application",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "LoggingApplicationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Logging Component application",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "DeploymentApplicationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Deployment Component application",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "PublishApplicationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the Engine Publish Component application",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "ApplicationName" : {
      "Description" : "Name of the Application associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "Engine",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "ApplicationDomain" : {
      "Description" : "DNS Name of the Application associated with the Stack",
      "Type" : "String",
      "MaxLength" : 16,
      "Default" : "",
      "AllowedPattern" : "(^$|^[a-z][-a-z0-9]*$)",
      "ConstraintDescription" : "must begin with a lower case letter and contain only lower case letters, numbers and dashes."
    },

    "ApplicationVersion" : {
      "Description" : "Version of the Application",
      "Type" : "String",
      "MinLength" : 5,
      "MaxLength" : 32,
      "Default" : "1.0.0",
      "AllowedPattern" : "^[0-9]*.[0-9]*.[0-9]*(-[a-zA-Z0-9][-a-zA-Z0-9]*)?$",
      "ConstraintDescription" : "must follow semantic versioning conventions."
    },

    "UseStaticAddress" : {
      "Description" : "Create and attach a separate Static Address",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "LogRetention" : {
      "Description" : "Number of days to retain CloudWatch Log Events (0 disables use of CloudWatch Logs)",
      "Type" : "Number",
      "Default" : 14,
      "AllowedValues" : [ 0, 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653 ],
      "ConstraintDescription" : "must be: 0 (disabled), 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827 or 3653."
    },

    "Schedule" : {
      "Description" : "Schedule Tag Value (blank disables Scheduler)",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^([0-9]|1[0-9]|2[0-3]):[0-5][0-9]-([0-9]|1[0-9]|2[0-3]):[0-5][0-9]T?$)",
      "ConstraintDescription" : "See Scheduler Lambda Function description for Tag format."
    },

    "PublicUserNetwork" : {
      "Description" : "Public network that can access the Application",
      "Type" : "String",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PublicUserNetwork1" : {
      "Description" : "Additional public network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PublicUserNetwork2" : {
      "Description" : "Additional public network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PrivateUserNetwork" : {
      "Description" : "Private network that can access the Application",
      "Type" : "String",
      "Default" : "10.0.0.0/16",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateUserNetwork1" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateUserNetwork2" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateAdministratorNetwork" : {
      "Description" : "Private network that can administer the Application",
      "Type" : "String",
      "Default" : "10.0.0.0/16",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PrivateAdministratorNetwork1" : {
      "Description" : "Additional private network that can administer the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PrivateAdministratorNetwork2" : {
      "Description" : "Additional private network that can administer the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Conditions" : {
    "ConfigureGlobalS3" : { "Fn::Equals" : [{ "Ref" : "AWS::Region" }, "us-east-1" ]},
    "ConfigureDomainName" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "ApplicationDomain" }, "" ]}]},
    "ConfigureLogs" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "LogRetention" }, "0" ]}]}
  },

  "Resources" : {
    "Roles" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-Roles.json" ]]},
        "Parameters" : {
          "ProductsBucket" : { "Ref" : "ProductsBucket" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "CalculationProductObject" : { "Ref" : "CalculationProductObject" },
          "MongoDBProductObject" : { "Ref" : "MongoDBProductObject" },
          "RabbitMQProductObject" : { "Ref" : "RabbitMQProductObject" },
          "DataStagingProductObject" : { "Ref" : "DataStagingProductObject" },
          "LoggingProductObject" : { "Ref" : "LoggingProductObject" },
          "DeploymentProductObject" : { "Ref" : "DeploymentProductObject" },
          "PublishProductObject" : { "Ref" : "PublishProductObject" },
          "ConfigurationsBucket" : { "Ref" : "ConfigurationsBucket" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "WebConfigurationObject" : { "Ref" : "WebConfigurationObject" },
          "CalculationConfigurationObject" : { "Ref" : "CalculationConfigurationObject" },
          "MongoDBConfigurationObject" : { "Ref" : "MongoDBConfigurationObject" },
          "RabbitMQConfigurationObject" : { "Ref" : "RabbitMQConfigurationObject" },
          "DataStagingConfigurationObject" : { "Ref" : "DataStagingConfigurationObject" },
          "LoggingConfigurationObject" : { "Ref" : "LoggingConfigurationObject" },
          "DeploymentConfigurationObject" : { "Ref" : "DeploymentConfigurationObject" },
          "PublishConfigurationObject" : { "Ref" : "PublishConfigurationObject" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationFolder" : { "Ref" : "ApplicationFolder" },
          "WebApplicationObject" : { "Ref" : "WebApplicationObject" },
          "CalculationApplicationObject" : { "Ref" : "CalculationApplicationObject" },
          "MongoDBApplicationObject" : { "Ref" : "MongoDBApplicationObject" },
          "RabbitMQApplicationObject" : { "Ref" : "RabbitMQApplicationObject" },
          "DataStagingApplicationObject" : { "Ref" : "DataStagingApplicationObject" },
          "LoggingApplicationObject" : { "Ref" : "LoggingApplicationObject" },
          "DeploymentApplicationObject" : { "Ref" : "DeploymentApplicationObject" },
          "PublishApplicationObject" : { "Ref" : "PublishApplicationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "LogRetention" : { "Ref" : "LogRetention" }
        }
      }
    },

    "Logs" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-Logs.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "SystemName" : { "Ref" : "SystemName" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "LogRetention" : { "Ref" : "LogRetention" }
        }
      },
      "Condition" : "ConfigureLogs"
    },

    "SecurityGroups" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-SecurityGroups.json" ]]},
        "Parameters" : {
          "VPNStackName" : { "Ref" : "VPNStackName" },
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "PublicUserNetwork" : { "Ref" : "PublicUserNetwork" },
          "PublicUserNetwork1" : { "Ref" : "PublicUserNetwork1" },
          "PublicUserNetwork2" : { "Ref" : "PublicUserNetwork2" },
          "PrivateUserNetwork" : { "Ref" : "PrivateUserNetwork" },
          "PrivateUserNetwork1" : { "Ref" : "PrivateUserNetwork1" },
          "PrivateUserNetwork2" : { "Ref" : "PrivateUserNetwork2" },
          "PrivateAdministratorNetwork" : { "Ref" : "PrivateAdministratorNetwork" },
          "PrivateAdministratorNetwork1" : { "Ref" : "PrivateAdministratorNetwork1" },
          "PrivateAdministratorNetwork2" : { "Ref" : "PrivateAdministratorNetwork2" }
        }
      }
    },

    "LoadBalancers" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-LoadBalancers.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "WebLoadBalancerSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.WebLoadBalancerSecurityGroup" ]},
          "ApplicationName" : { "Ref" : "ApplicationName" }
        }
      }
    },

    "WebInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-WebInstances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "CustomIdentifierFunctionsStackName" : { "Ref" : "CustomIdentifierFunctionsStackName" },
          "StandardCIDRFunctionsStackName" : { "Ref" : "StandardCIDRFunctionsStackName" },
          "StandardAMIFunctionsStackName" : { "Ref" : "StandardAMIFunctionsStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "WebRole" : { "Fn::GetAtt" : [ "Roles", "Outputs.WebRole" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "WebInstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.WebInstanceSecurityGroup" ]},
          "CompanyName" : { "Ref" : "CompanyName" },
          "SystemName" : { "Ref" : "SystemName" },
          "EnvironmentSize" : { "Ref" : "EnvironmentSize" },
          "WindowsOSName" : { "Ref" : "WindowsOSName" },
          "ConfigurationsBucket" : { "Ref" : "ConfigurationsBucket" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "WebConfigurationObject" : { "Ref" : "WebConfigurationObject" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationFolder" : { "Ref" : "ApplicationFolder" },
          "WebApplicationObject" : { "Ref" : "WebApplicationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationVersion" : { "Ref" : "ApplicationVersion" },
          "UseStaticAddress" : { "Ref" : "UseStaticAddress" },
          "LogRetention" : { "Ref" : "LogRetention" },
          "Schedule" : { "Ref" : "Schedule" }
        }
      }
    },

    "CalculationInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-CalculationInstances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "CustomIdentifierFunctionsStackName" : { "Ref" : "CustomIdentifierFunctionsStackName" },
          "StandardCIDRFunctionsStackName" : { "Ref" : "StandardCIDRFunctionsStackName" },
          "StandardAMIFunctionsStackName" : { "Ref" : "StandardAMIFunctionsStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "CalculationRole" : { "Fn::GetAtt" : [ "Roles", "Outputs.CalculationRole" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "CalculationInstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.CalculationInstanceSecurityGroup" ]},
          "CompanyName" : { "Ref" : "CompanyName" },
          "SystemName" : { "Ref" : "SystemName" },
          "EnvironmentSize" : { "Ref" : "EnvironmentSize" },
          "WindowsOSName" : { "Ref" : "WindowsOSName" },
          "ProductsBucket" : { "Ref" : "ProductsBucket" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "CalculationProductObject" : { "Ref" : "CalculationProductObject" },
          "ConfigurationsBucket" : { "Ref" : "ConfigurationsBucket" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "CalculationConfigurationObject" : { "Ref" : "CalculationConfigurationObject" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationFolder" : { "Ref" : "ApplicationFolder" },
          "CalculationApplicationObject" : { "Ref" : "CalculationApplicationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationVersion" : { "Ref" : "ApplicationVersion" },
          "UseStaticAddress" : { "Ref" : "UseStaticAddress" },
          "LogRetention" : { "Ref" : "LogRetention" },
          "Schedule" : { "Ref" : "Schedule" }
        }
      }
    },

    "MongoDBInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-MongoDBInstances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "CustomIdentifierFunctionsStackName" : { "Ref" : "CustomIdentifierFunctionsStackName" },
          "StandardCIDRFunctionsStackName" : { "Ref" : "StandardCIDRFunctionsStackName" },
          "StandardAMIFunctionsStackName" : { "Ref" : "StandardAMIFunctionsStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "MongoDBRole" : { "Fn::GetAtt" : [ "Roles", "Outputs.MongoDBRole" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "MongoDBInstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.MongoDBInstanceSecurityGroup" ]},
          "CompanyName" : { "Ref" : "CompanyName" },
          "SystemName" : { "Ref" : "SystemName" },
          "EnvironmentSize" : { "Ref" : "EnvironmentSize" },
          "LinuxOSName" : { "Ref" : "LinuxOSName" },
          "ProductsBucket" : { "Ref" : "ProductsBucket" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "MongoDBProductObject" : { "Ref" : "MongoDBProductObject" },
          "ConfigurationsBucket" : { "Ref" : "ConfigurationsBucket" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "MongoDBConfigurationObject" : { "Ref" : "MongoDBConfigurationObject" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationFolder" : { "Ref" : "ApplicationFolder" },
          "MongoDBApplicationObject" : { "Ref" : "MongoDBApplicationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationVersion" : { "Ref" : "ApplicationVersion" },
          "UseStaticAddress" : { "Ref" : "UseStaticAddress" },
          "LogRetention" : { "Ref" : "LogRetention" },
          "Schedule" : { "Ref" : "Schedule" }
        }
      }
    },

    "RabbitMQInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-RabbitMQInstances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "CustomIdentifierFunctionsStackName" : { "Ref" : "CustomIdentifierFunctionsStackName" },
          "StandardCIDRFunctionsStackName" : { "Ref" : "StandardCIDRFunctionsStackName" },
          "StandardAMIFunctionsStackName" : { "Ref" : "StandardAMIFunctionsStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "RabbitMQRole" : { "Fn::GetAtt" : [ "Roles", "Outputs.RabbitMQRole" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "RabbitMQInstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.RabbitMQInstanceSecurityGroup" ]},
          "CompanyName" : { "Ref" : "CompanyName" },
          "SystemName" : { "Ref" : "SystemName" },
          "EnvironmentSize" : { "Ref" : "EnvironmentSize" },
          "LinuxOSName" : { "Ref" : "LinuxOSName" },
          "ProductsBucket" : { "Ref" : "ProductsBucket" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "RabbitMQProductObject" : { "Ref" : "RabbitMQProductObject" },
          "ConfigurationsBucket" : { "Ref" : "ConfigurationsBucket" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "RabbitMQConfigurationObject" : { "Ref" : "RabbitMQConfigurationObject" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationFolder" : { "Ref" : "ApplicationFolder" },
          "RabbitMQApplicationObject" : { "Ref" : "RabbitMQApplicationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationVersion" : { "Ref" : "ApplicationVersion" },
          "UseStaticAddress" : { "Ref" : "UseStaticAddress" },
          "LogRetention" : { "Ref" : "LogRetention" },
          "Schedule" : { "Ref" : "Schedule" }
        }
      }
    },

    "DataStagingInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-DataStagingInstances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "CustomIdentifierFunctionsStackName" : { "Ref" : "CustomIdentifierFunctionsStackName" },
          "StandardCIDRFunctionsStackName" : { "Ref" : "StandardCIDRFunctionsStackName" },
          "StandardAMIFunctionsStackName" : { "Ref" : "StandardAMIFunctionsStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "DataStagingRole" : { "Fn::GetAtt" : [ "Roles", "Outputs.DataStagingRole" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "DataStagingInstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.DataStagingInstanceSecurityGroup" ]},
          "CompanyName" : { "Ref" : "CompanyName" },
          "SystemName" : { "Ref" : "SystemName" },
          "EnvironmentSize" : { "Ref" : "EnvironmentSize" },
          "WindowsOSName" : { "Ref" : "WindowsOSName" },
          "ProductsBucket" : { "Ref" : "ProductsBucket" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "DataStagingProductObject" : { "Ref" : "DataStagingProductObject" },
          "ConfigurationsBucket" : { "Ref" : "ConfigurationsBucket" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "DataStagingConfigurationObject" : { "Ref" : "DataStagingConfigurationObject" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationFolder" : { "Ref" : "ApplicationFolder" },
          "DataStagingApplicationObject" : { "Ref" : "DataStagingApplicationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationVersion" : { "Ref" : "ApplicationVersion" },
          "UseStaticAddress" : { "Ref" : "UseStaticAddress" },
          "LogRetention" : { "Ref" : "LogRetention" },
          "Schedule" : { "Ref" : "Schedule" }
        }
      }
    },

    "LoggingInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-LoggingInstances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "CustomIdentifierFunctionsStackName" : { "Ref" : "CustomIdentifierFunctionsStackName" },
          "StandardCIDRFunctionsStackName" : { "Ref" : "StandardCIDRFunctionsStackName" },
          "StandardAMIFunctionsStackName" : { "Ref" : "StandardAMIFunctionsStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "LoggingRole" : { "Fn::GetAtt" : [ "Roles", "Outputs.LoggingRole" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "LoggingInstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.LoggingInstanceSecurityGroup" ]},
          "CompanyName" : { "Ref" : "CompanyName" },
          "SystemName" : { "Ref" : "SystemName" },
          "EnvironmentSize" : { "Ref" : "EnvironmentSize" },
          "WindowsOSName" : { "Ref" : "WindowsOSName" },
          "ProductsBucket" : { "Ref" : "ProductsBucket" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "LoggingProductObject" : { "Ref" : "LoggingProductObject" },
          "ConfigurationsBucket" : { "Ref" : "ConfigurationsBucket" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "LoggingConfigurationObject" : { "Ref" : "LoggingConfigurationObject" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationFolder" : { "Ref" : "ApplicationFolder" },
          "LoggingApplicationObject" : { "Ref" : "LoggingApplicationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationVersion" : { "Ref" : "ApplicationVersion" },
          "UseStaticAddress" : { "Ref" : "UseStaticAddress" },
          "LogRetention" : { "Ref" : "LogRetention" },
          "Schedule" : { "Ref" : "Schedule" }
        }
      }
    },

    "DeploymentInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-DeploymentInstances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "CustomIdentifierFunctionsStackName" : { "Ref" : "CustomIdentifierFunctionsStackName" },
          "StandardCIDRFunctionsStackName" : { "Ref" : "StandardCIDRFunctionsStackName" },
          "StandardAMIFunctionsStackName" : { "Ref" : "StandardAMIFunctionsStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "DeploymentRole" : { "Fn::GetAtt" : [ "Roles", "Outputs.DeploymentRole" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "DeploymentInstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.DeploymentInstanceSecurityGroup" ]},
          "CompanyName" : { "Ref" : "CompanyName" },
          "SystemName" : { "Ref" : "SystemName" },
          "EnvironmentSize" : { "Ref" : "EnvironmentSize" },
          "WindowsOSName" : { "Ref" : "WindowsOSName" },
          "ProductsBucket" : { "Ref" : "ProductsBucket" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "DeploymentProductObject" : { "Ref" : "DeploymentProductObject" },
          "ConfigurationsBucket" : { "Ref" : "ConfigurationsBucket" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "DeploymentConfigurationObject" : { "Ref" : "DeploymentConfigurationObject" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationFolder" : { "Ref" : "ApplicationFolder" },
          "DeploymentApplicationObject" : { "Ref" : "DeploymentApplicationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationVersion" : { "Ref" : "ApplicationVersion" },
          "UseStaticAddress" : { "Ref" : "UseStaticAddress" },
          "LogRetention" : { "Ref" : "LogRetention" },
          "Schedule" : { "Ref" : "Schedule" }
        }
      }
    },

    "PublishInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Ref" : "TemplatesBucket" }, "/", { "Ref" : "TemplateFolder" }, "/Application-Engine-PublishInstances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "CustomIdentifierFunctionsStackName" : { "Ref" : "CustomIdentifierFunctionsStackName" },
          "StandardCIDRFunctionsStackName" : { "Ref" : "StandardCIDRFunctionsStackName" },
          "StandardAMIFunctionsStackName" : { "Ref" : "StandardAMIFunctionsStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "PublishRole" : { "Fn::GetAtt" : [ "Roles", "Outputs.PublishRole" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "PublishInstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.PublishInstanceSecurityGroup" ]},
          "CompanyName" : { "Ref" : "CompanyName" },
          "SystemName" : { "Ref" : "SystemName" },
          "EnvironmentSize" : { "Ref" : "EnvironmentSize" },
          "WindowsOSName" : { "Ref" : "WindowsOSName" },
          "ProductsBucket" : { "Ref" : "ProductsBucket" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "PublishProductObject" : { "Ref" : "PublishProductObject" },
          "ConfigurationsBucket" : { "Ref" : "ConfigurationsBucket" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "PublishConfigurationObject" : { "Ref" : "PublishConfigurationObject" },
          "ApplicationsBucket" : { "Ref" : "ApplicationsBucket" },
          "ApplicationFolder" : { "Ref" : "ApplicationFolder" },
          "PublishApplicationObject" : { "Ref" : "PublishApplicationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "ApplicationVersion" : { "Ref" : "ApplicationVersion" },
          "UseStaticAddress" : { "Ref" : "UseStaticAddress" },
          "LogRetention" : { "Ref" : "LogRetention" },
          "Schedule" : { "Ref" : "Schedule" }
        }
      }
    }
  },

  "Outputs" : {
    "WebInstanceSecurityGroup" : {
      "Description" : "The WebInstance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.WebInstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-WebInstanceSecurityGroup" }}
    },

    "CalculationInstanceSecurityGroup" : {
      "Description" : "The CalculationInstance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.CalculationInstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-CalculationInstanceSecurityGroup" }}
    },

    "MongoDBInstanceSecurityGroup" : {
      "Description" : "The MongoDBInstance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.MongoDBInstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-MongoDBInstanceSecurityGroup" }}
    },

    "RabbitMQInstanceSecurityGroup" : {
      "Description" : "The RabbitMQInstance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.RabbitMQInstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-RabbitMQInstanceSecurityGroup" }}
    },

    "DataStagingInstanceSecurityGroup" : {
      "Description" : "The DataStagingInstance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.DataStagingInstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-DataStagingInstanceSecurityGroup" }}
    },

    "LoggingInstanceSecurityGroup" : {
      "Description" : "The LoggingInstance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.LoggingInstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-LoggingInstanceSecurityGroup" }}
    },

    "DeploymentInstanceSecurityGroup" : {
      "Description" : "The DeploymentInstance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.DeploymentInstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-DeploymentInstanceSecurityGroup" }}
    },

    "PublishInstanceSecurityGroup" : {
      "Description" : "The PublishInstance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.PublishInstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublishInstanceSecurityGroup" }}
    },
  }
}
