{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Application-WebSphereMQ-SecurityGroups Template. This is a layer in the WebSphereMQ application, which creates SecurityGroups. The Environment's LinuxBastions Stack must exist before creating this stack.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [
            "VPNStackName",
            "LinuxBastionsStackName",
            "VPCStackName"
          ]
        },
        {
          "Label" : { "default" : "Application Configuration" },
          "Parameters" : [
            "ApplicationName"
          ]
        },
        {
          "Label" : { "default" : "Security Configuration" },
          "Parameters" : [
            "PublicUserNetwork",
            "PublicUserNetwork1",
            "PublicUserNetwork2",
            "PublicUserNetwork3",
            "PrivateUserNetwork",
            "PrivateUserNetwork1",
            "PrivateUserNetwork2",
            "PrivateUserNetwork3"
          ]
        }
      ],

      "ParameterLabels" : {
        "VPNStackName" : { "default" : "VPN Stack Name" },
        "LinuxBastionsStackName" : { "default" : "LinuxBastions Stack Name" },
        "VPCStackName" : { "default" : "VPC Stack Name" },
        "ApplicationName" : { "default" : "Application Name" },
        "PublicUserNetwork" : { "default" : "Public User Network" },
        "PublicUserNetwork1" : { "default" : "Additional Public User Network 1" },
        "PublicUserNetwork2" : { "default" : "Additional Public User Network 2" },
        "PublicUserNetwork3" : { "default" : "Additional Public User Network 3" },
        "PrivateUserNetwork" : { "default" : "Private User Network" },
        "PrivateUserNetwork1" : { "default" : "Additional Private User Network 1" },
        "PrivateUserNetwork2" : { "default" : "Additional Private User Network 2" },
        "PrivateUserNetwork3" : { "default" : "Additional Private User Network 3" }
      }
    }
  },

  "Parameters" : {
    "VPNStackName" : {
      "Description" : "Name of the CloudFormation Stack containing VPN Instances",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "Production-OpenVPN",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "LinuxBastionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing Linux Bastions",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "Production-LinuxBastions",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "VPCStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the VPC",
      "Type" : "String",
      "MinLength" : 8,
      "MaxLength" : 64,
      "Default" : "Production-VPC",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "ApplicationName" : {
      "Description" : "Name of the Application associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "WebSphereMQ",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "PublicUserNetwork" : {
      "Description" : "Public network that can access the Application",
      "Type" : "String",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PublicUserNetwork1" : {
      "Description" : "Additional public network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PublicUserNetwork2" : {
      "Description" : "Additional public network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PublicUserNetwork3" : {
      "Description" : "Additional public network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PrivateUserNetwork" : {
      "Description" : "Private network that can access the Application",
      "Type" : "String",
      "Default" : "10.0.0.0/16",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateUserNetwork1" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateUserNetwork2" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateUserNetwork3" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    }
  },

  "Conditions" : {
    "ConfigurePublicUserNetwork1" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "PublicUserNetwork1" }, "" ]}]},
    "ConfigurePublicUserNetwork2" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "PublicUserNetwork2" }, "" ]}]},
    "ConfigurePublicUserNetwork3" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "PublicUserNetwork3" }, "" ]}]},
    "ConfigurePrivateUserNetwork1" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "PrivateUserNetwork1" }, "" ]}]},
    "ConfigurePrivateUserNetwork2" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "PrivateUserNetwork2" }, "" ]}]},
    "ConfigurePrivateUserNetwork3" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "PrivateUserNetwork3" }, "" ]}]}
  },

  "Resources" : {
    "WebLoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "WebLoadBalancerSecurityGroup" ]]},
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPC" }},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "icmp", "FromPort" :  "-1", "ToPort" :  "-1", "CidrIp" : { "Ref" : "PublicUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "80", "ToPort" :  "80", "CidrIp" : { "Ref" : "PublicUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Ref" : "PublicUserNetwork" }},
          { "Fn::If" : [ "ConfigurePublicUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :  "-1", "ToPort" :  "-1", "CidrIp" : { "Ref" : "PublicUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePublicUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "80", "ToPort" :  "80", "CidrIp" : { "Ref" : "PublicUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePublicUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Ref" : "PublicUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePublicUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :  "-1", "ToPort" :  "-1", "CidrIp" : { "Ref" : "PublicUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePublicUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "80", "ToPort" :  "80", "CidrIp" : { "Ref" : "PublicUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePublicUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Ref" : "PublicUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePublicUserNetwork3", { "IpProtocol" : "icmp", "FromPort" :  "-1", "ToPort" :  "-1", "CidrIp" : { "Ref" : "PublicUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePublicUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "80", "ToPort" :  "80", "CidrIp" : { "Ref" : "PublicUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePublicUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Ref" : "PublicUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "IpProtocol" : "icmp", "FromPort" :  "-1", "ToPort" :  "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "80", "ToPort" :  "80", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :  "-1", "ToPort" :  "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "80", "ToPort" :  "80", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :  "-1", "ToPort" :  "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "80", "ToPort" :  "80", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "icmp", "FromPort" :  "-1", "ToPort" :  "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "80", "ToPort" :  "80", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]}
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "WebLoadBalancerSecurityGroup" ]]}}
        ]
      }
    },

    "WebInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "WebInstanceSecurityGroup" ]]},
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPC" }},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "SourceSecurityGroupId" : { "Ref" : "WebLoadBalancerSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "SourceSecurityGroupId" : { "Ref" : "WebLoadBalancerSecurityGroup" }},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]}
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "WebInstanceSecurityGroup" ]]}}
        ]
      }
    },

    "CalculationInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "CalculationInstanceSecurityGroup" ]]},
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPC" }},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "SourceSecurityGroupId" : { "Ref" : "WebInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "SourceSecurityGroupId" : { "Ref" : "WebInstanceSecurityGroup" }},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]}
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "CalculationInstanceSecurityGroup" ]]}}
        ]
      }
    },

    "MongoDBInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "MongoDBInstanceSecurityGroup" ]]},
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPC" }},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp",  "FromPort" : "27017", "ToPort" : "27017", "SourceSecurityGroupId" : { "Ref" : "CalculationInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "27018", "ToPort" : "27018", "SourceSecurityGroupId" : { "Ref" : "CalculationInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "27019", "ToPort" : "27019", "SourceSecurityGroupId" : { "Ref" : "CalculationInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "28017", "ToPort" : "28017", "SourceSecurityGroupId" : { "Ref" : "CalculationInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "27017", "ToPort" : "27017", "SourceSecurityGroupId" : { "Ref" : "MongoDBInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "27018", "ToPort" : "27018", "SourceSecurityGroupId" : { "Ref" : "MongoDBInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "27019", "ToPort" : "27019", "SourceSecurityGroupId" : { "Ref" : "MongoDBInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "28017", "ToPort" : "28017", "SourceSecurityGroupId" : { "Ref" : "MongoDBInstanceSecurityGroup" }},
          { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :    "22", "ToPort" :    "22", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :    "22", "ToPort" :    "22", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "27017", "ToPort" : "27017", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "27018", "ToPort" : "27018", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "27019", "ToPort" : "27019", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "28017", "ToPort" : "28017", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :    "22", "ToPort" :    "22", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "27017", "ToPort" : "27017", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "27018", "ToPort" : "27018", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "27019", "ToPort" : "27019", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "28017", "ToPort" : "28017", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :    "22", "ToPort" :    "22", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "27017", "ToPort" : "27017", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "27018", "ToPort" : "27018", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "27019", "ToPort" : "27019", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "28017", "ToPort" : "28017", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]}
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "MongoDBInstanceSecurityGroup" ]]}}
        ]
      }
    },

    "RabbitMQInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "RabbitMQInstanceSecurityGroup" ]]},
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPC" }},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp",  "FromPort" :  "5671", "ToPort" :  "5671", "SourceSecurityGroupId" : { "Ref" : "CalculationInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "5672", "ToPort" :  "5672", "SourceSecurityGroupId" : { "Ref" : "CalculationInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "4369", "ToPort" :  "4369", "SourceSecurityGroupId" : { "Ref" : "RabbitMQInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "5671", "ToPort" :  "5671", "SourceSecurityGroupId" : { "Ref" : "RabbitMQInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "5672", "ToPort" :  "5672", "SourceSecurityGroupId" : { "Ref" : "RabbitMQInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "15672", "ToPort" : "15672", "SourceSecurityGroupId" : { "Ref" : "RabbitMQInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "25672", "ToPort" : "25672", "SourceSecurityGroupId" : { "Ref" : "RabbitMQInstanceSecurityGroup" }},
          { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :  "5671", "ToPort" :  "5671", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :  "5672", "ToPort" :  "5672", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "15672", "ToPort" : "15672", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "5671", "ToPort" :  "5671", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "5672", "ToPort" :  "5672", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "15672", "ToPort" : "15672", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "5671", "ToPort" :  "5671", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "5672", "ToPort" :  "5672", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "15672", "ToPort" : "15672", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "5671", "ToPort" :  "5671", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "5672", "ToPort" :  "5672", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "15672", "ToPort" : "15672", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "5671", "ToPort" :  "5671", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "5672", "ToPort" :  "5672", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "15672", "ToPort" : "15672", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]}
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "RabbitMQInstanceSecurityGroup" ]]}}
        ]
      }
    },

    "QueueProcessorInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "QueueProcessorInstanceSecurityGroup" ]]},
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPC" }},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp",  "FromPort" : "1414", "ToPort" : "1414", "SourceSecurityGroupId" : { "Ref" : "CalculationInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" : "1414", "ToPort" : "1414", "SourceSecurityGroupId" : { "Ref" : "QueueProcessorInstanceSecurityGroup" }},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${LinuxBastionsStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "1414", "ToPort" : "1414", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${LinuxBastionsStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${LinuxBastionsStackName}-SecurityGroup" }}},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "1414", "ToPort" : "1414", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "1414", "ToPort" : "1414", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "1414", "ToPort" : "1414", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "1414", "ToPort" : "1414", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "1414", "ToPort" : "1414", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]}
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "QueueProcessorInstanceSecurityGroup" ]]}}
        ]
      }
    },

    "LoggingInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "LoggingInstanceSecurityGroup" ]]},
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPC" }},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp",  "FromPort" :  "514", "ToPort" :  "514", "SourceSecurityGroupId" : { "Ref" : "CalculationInstanceSecurityGroup" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "514", "ToPort" :  "514", "SourceSecurityGroupId" : { "Ref" : "QueueProcessorInstanceSecurityGroup" }},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :  "514", "ToPort" :  "514", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "514", "ToPort" :  "514", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "514", "ToPort" :  "514", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "514", "ToPort" :  "514", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "514", "ToPort" :  "514", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]}
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "LoggingInstanceSecurityGroup" ]]}}
        ]
      }
    },

    "DeploymentInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "DeploymentInstanceSecurityGroup" ]]},
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPC" }},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "10933", "ToPort" : "10933", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "10933", "ToPort" : "10933", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "10933", "ToPort" : "10933", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "10933", "ToPort" : "10933", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "icmp", "FromPort" :    "-1", "ToPort" :    "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "3389", "ToPort" :  "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "10933", "ToPort" : "10933", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]}
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "DeploymentInstanceSecurityGroup" ]]}}
        ]
      }
    },

    "PublishInstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "PublishInstanceSecurityGroup" ]]},
        "VpcId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPC" }},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "SourceSecurityGroupId" : { "Fn::ImportValue" : { "Fn::Sub" : "${VPNStackName}-SecurityGroup" }}},
          { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork" }},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork1", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork1" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork2", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork2" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "icmp", "FromPort" :   "-1", "ToPort" :   "-1", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :   "80", "ToPort" :   "80", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" :  "443", "ToPort" :  "443", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]},
          { "Fn::If" : [ "ConfigurePrivateUserNetwork3", { "IpProtocol" : "tcp",  "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "PrivateUserNetwork3" }}, { "Ref" : "AWS::NoValue" }]}
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "-", [ { "Fn::ImportValue" : { "Fn::Sub" : "${VPCStackName}-VPCName" }}, { "Ref" : "ApplicationName" }, "PublishInstanceSecurityGroup" ]]}}
        ]
      }
    }
  },

  "Outputs" : {
    "WebLoadBalancerSecurityGroup" : {
      "Description" : "The WebLoadBalancer SecurityGroup",
      "Value" : { "Ref" : "WebLoadBalancerSecurityGroup" }
    },

    "WebInstanceSecurityGroup" : {
      "Description" : "The WebInstance SecurityGroup",
      "Value" : { "Ref" : "WebInstanceSecurityGroup" }
    },

    "CalculationInstanceSecurityGroup" : {
      "Description" : "The CalculationInstance SecurityGroup",
      "Value" : { "Ref" : "CalculationInstanceSecurityGroup" }
    },

    "MongoDBInstanceSecurityGroup" : {
      "Description" : "The MongoDBInstance SecurityGroup",
      "Value" : { "Ref" : "MongoDBInstanceSecurityGroup" }
    },

    "RabbitMQInstanceSecurityGroup" : {
      "Description" : "The RabbitMQInstance SecurityGroup",
      "Value" : { "Ref" : "RabbitMQInstanceSecurityGroup" }
    },

    "QueueProcessorInstanceSecurityGroup" : {
      "Description" : "The QueueProcessor SecurityGroup",
      "Value" : { "Ref" : "QueueProcessorInstanceSecurityGroup" }
    },

    "LoggingInstanceSecurityGroup" : {
      "Description" : "The LoggingInstance SecurityGroup",
      "Value" : { "Ref" : "LoggingInstanceSecurityGroup" }
    },

    "DeploymentInstanceSecurityGroup" : {
      "Description" : "The DeploymentInstance SecurityGroup",
      "Value" : { "Ref" : "DeploymentInstanceSecurityGroup" }
    },

    "PublishInstanceSecurityGroup" : {
      "Description" : "The PublishInstance SecurityGroup",
      "Value" : { "Ref" : "PublishInstanceSecurityGroup" }
    }
  }
}
