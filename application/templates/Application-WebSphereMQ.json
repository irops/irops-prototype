{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Application-WebSphereMQ Template. This template creates the WebSphereMQ Application, using the Nested Stack model to separate Resources into logical groups.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [
            "VPNStackName",
            "LinuxBastionsStackName",
            "VPCStackName",
            "CustomIdentifierFunctionsStackName",
            "StandardCIDRFunctionsStackName",
            "StandardAMIFunctionsStackName",
            "StandardBucketsStackName",
            "StandardTopicsStackName"
          ]
        },
        {
          "Label" : { "default" : "Resource Dependencies" },
          "Parameters" : [
            "KeyName"
          ]
        },
        {
          "Label" : { "default" : "Template Configuration" },
          "Parameters" : [
            "TemplateFolder"
          ]
        },
        {
          "Label" : { "default" : "System Configuration" },
          "Parameters" : [
            "CompanyName",
            "SystemName"
          ]
        },
        {
          "Label" : { "default" : "Environment Configuration" },
          "Parameters" : [
            "EnvironmentType",
            "OSName"
          ]
        },
        {
          "Label" : { "default" : "Application Dependencies Configuration" },
          "Parameters" : [
            "ProductFolder",
            "ProductObject",
            "ConfigurationFolder",
            "ConfigurationObject"
          ]
        },
        {
          "Label" : { "default" : "Application Configuration" },
          "Parameters" : [
            "ApplicationName",
            "UseStaticAddress",
            "UseFileSystemMonitoring",
            "LogRetention",
            "Schedule"
          ]
        },
        {
          "Label" : { "default" : "Security Configuration" },
          "Parameters" : [
            "PrivateUserNetwork",
            "PrivateUserNetwork1",
            "PrivateUserNetwork2",
            "PrivateAdministratorNetwork",
            "PrivateAdministratorNetwork1",
            "PrivateAdministratorNetwork2"
          ]
        }
      ],

      "ParameterLabels" : {
        "VPNStackName" : { "default" : "VPN Stack Name" },
        "LinuxBastionsStackName" : { "default" : "LinuxBastions Stack Name" },
        "VPCStackName" : { "default" : "VPC Stack Name" },
        "CustomIdentifierFunctionsStackName" : { "default" : "CustomIdentifierFunctions Stack Name" },
        "StandardCIDRFunctionsStackName" : { "default" : "StandardCIDRFunctions Stack Name" },
        "StandardAMIFunctionsStackName" : { "default" : "StandardAMIFunctions Stack Name" },
        "StandardBucketsStackName" : { "default" : "StandardBuckets Stack Name" },
        "StandardTopicsStackName" : { "default" : "StandardTopics Stack Name" },
        "KeyName" : { "default" : "Key Name" },
        "TemplateFolder" : { "default" : "Template Folder" },
        "CompanyName" : { "default" : "Company Name" },
        "SystemName" : { "default" : "System Name" },
        "EnvironmentType" : { "default" : "Environment Type" },
        "OSName" : { "default" : "Operating System Name" },
        "ProductFolder" : { "default" : "Product Folder" },
        "ProductObject" : { "default" : "Product Object" },
        "ConfigurationFolder" : { "default" : "Configuration Folder" },
        "ConfigurationObject" : { "default" : "Configuration Object" },
        "ApplicationName" : { "default" : "Application Name" },
        "UseStaticAddress" : { "default" : "Use Static Address" },
        "UseFileSystemMonitoring" : { "default" : "Use FileSystem Monitoring" },
        "LogRetention" : { "default" : "Log Retention" },
        "Schedule" : { "default" : "Schedule" },
        "PrivateUserNetwork" : { "default" : "Private User Network" },
        "PrivateUserNetwork1" : { "default" : "Additional Private User Network 1" },
        "PrivateUserNetwork2" : { "default" : "Additional Private User Network 2" },
        "PrivateAdministratorNetwork" : { "default" : "Private Administrator Network" },
        "PrivateAdministratorNetwork1" : { "default" : "Additional Private Administrator Network 1" },
        "PrivateAdministratorNetwork2" : { "default" : "Additional Private Administrator Network 2" }
      }
    }
  },

  "Parameters" : {
    "VPNStackName" : {
      "Description" : "Name of the CloudFormation Stack containing VPN Instances",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "Production-OpenVPN",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "LinuxBastionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing Linux Bastions",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "Production-LinuxBastions",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "VPCStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the VPC",
      "Type" : "String",
      "MinLength" : 8,
      "MaxLength" : 64,
      "Default" : "Production-VPC",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "CustomIdentifierFunctionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Custom Identifier Functions",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "CustomIdentifierFunctions",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "StandardCIDRFunctionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Standard CIDR Functions",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "StandardCIDRFunctions",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "StandardAMIFunctionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Standard AMI Functions",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "StandardAMIFunctions",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "StandardBucketsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing Standard Buckets",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "StandardBuckets",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "StandardTopicsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing Standard Topics",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 64,
      "Default" : "StandardTopics",
      "AllowedPattern" : "^[A-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "KeyName" : {
      "Description" : "Name of an existing KeyPair to enable SSH access to the Instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "MaxLength" : 32,
      "Default" : "administrator",
      "AllowedPattern" : "(^$|^[_a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "TemplateFolder" : {
      "Description" : "Folder within the S3 Templates bucket containing Templates referenced by this Template",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "application",
      "AllowedPattern" : "^[-a-zA-Z0-9]*$",
      "ConstraintDescription" : "must contain alphanumeric characters and dashes."
    },

    "CompanyName" : {
      "Description" : "Name of the Company associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "Travel",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "SystemName" : {
      "Description" : "Name of the System associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "IROPS",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "EnvironmentType" : {
      "Description" : "Type of the Environment to build. Used to select size-related options in Mappings",
      "Type" : "String",
      "Default" : "small",
      "AllowedValues" : [ "small", "medium", "large", "xlarge" ],
      "ConstraintDescription" : "must be small, medium, large or xlarge."
    },

    "OSName" : {
      "Description" : "The Operating System to use for Instances",
      "Type" : "String",
      "Default" : "Amazon Linux",
      "AllowedValues" : [ "Amazon Linux", "Amazon Linux 2017.03.0", "RHEL 7", "RHEL 7.4", "RHEL 7.3" ],
      "ConstraintDescription" : "must be \"Amazon Linux\" (latest), \"Amazon Linux 2017.03.0\", \"RHEL 7\" (latest), \"RHEL 7.4\" or \"RHEL 7.3\"."
    },

    "ProductFolder" : {
      "Description" : "Folder within the S3 Products bucket containing Products deployed by this Template",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "WebSphereMQ",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "ProductObject" : {
      "Description" : "Object within the S3 bucket and folder containing the WebSphereMQ installer",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "ConfigurationFolder" : {
      "Description" : "Folder within the S3 Configurations bucket containing Configurations deployed by this Template",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "WebSphereMQ",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "ConfigurationObject" : {
      "Description" : "Object within the S3 bucket and folder containing the WebSphereMQ configuration",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "",
      "AllowedPattern" : "(^$|^[-_.a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must be a valid filename, not containing slashes."
    },

    "ApplicationName" : {
      "Description" : "Name of the Application associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 32,
      "Default" : "WebSphereMQ",
      "AllowedPattern" : "^[A-Z][a-zA-Z0-9]*$",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters."
    },

    "UseStaticAddress" : {
      "Description" : "Create and attach a separate Static Address",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "UseFileSystemMonitoring" : {
      "Description" : "Send EFS NFS Statistics to CloudWatch as Custom Metrics",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "LogRetention" : {
      "Description" : "Number of days to retain CloudWatch Log Events (0 disables use of CloudWatch Logs)",
      "Type" : "Number",
      "Default" : 14,
      "AllowedValues" : [ 0, 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653 ],
      "ConstraintDescription" : "must be: 0 (disabled), 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827 or 3653."
    },

    "Schedule" : {
      "Description" : "Schedule Tag Value (blank disables Scheduler)",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^([0-9]|1[0-9]|2[0-3]):[0-5][0-9]-([0-9]|1[0-9]|2[0-3]):[0-5][0-9]T?$)",
      "ConstraintDescription" : "See Scheduler Lambda Function description for Tag format."
    },

    "PrivateUserNetwork" : {
      "Description" : "Private network that can access the Application",
      "Type" : "String",
      "Default" : "10.0.0.0/16",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateUserNetwork1" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateUserNetwork2" : {
      "Description" : "Additional private network that can access the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.x.x.x/x."
    },

    "PrivateAdministratorNetwork" : {
      "Description" : "Private network that can administer the Application",
      "Type" : "String",
      "Default" : "10.0.0.0/16",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PrivateAdministratorNetwork1" : {
      "Description" : "Additional private network that can administer the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PrivateAdministratorNetwork2" : {
      "Description" : "Additional private network that can administer the Application",
      "Type" : "String",
      "Default" : "",
      "AllowedPattern" : "(^$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$)",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Conditions" : {
    "ConfigureGlobalS3" : { "Fn::Equals" : [{ "Ref" : "AWS::Region" }, "us-east-1" ]},
    "ConfigureFileSystemMonitoring" : { "Fn::Equals" : [{ "Ref" : "UseFileSystemMonitoring" }, "true" ]},
    "ConfigureLogs" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "LogRetention" }, "0" ]}]}
  },

  "Resources" : {
    "Roles" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Fn::ImportValue" : { "Fn::Sub" : "${StandardBucketsStackName}-TemplatesBucket" }}, "/", { "Ref" : "TemplateFolder" }, "/Application-WebSphereMQ-Roles.json" ]]},
        "Parameters" : {
          "StandardBucketsStackName" : { "Ref" : "StandardBucketsStackName" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "ProductObject" : { "Ref" : "ProductObject" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "ConfigurationObject" : { "Ref" : "ConfigurationObject" },
          "UseFileSystemMonitoring" : { "Ref" : "UseFileSystemMonitoring" },
          "LogRetention" : { "Ref" : "LogRetention" }
        }
      }
    },

    "Logs" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Fn::ImportValue" : { "Fn::Sub" : "${StandardBucketsStackName}-TemplatesBucket" }}, "/", { "Ref" : "TemplateFolder" }, "/Application-WebSphereMQ-Logs.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "SystemName" : { "Ref" : "SystemName" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "LogRetention" : { "Ref" : "LogRetention" }
        }
      },
      "Condition" : "ConfigureLogs"
    },

    "SecurityGroups" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Fn::ImportValue" : { "Fn::Sub" : "${StandardBucketsStackName}-TemplatesBucket" }}, "/", { "Ref" : "TemplateFolder" }, "/Application-WebSphereMQ-SecurityGroups.json" ]]},
        "Parameters" : {
          "VPNStackName" : { "Ref" : "VPNStackName" },
          "LinuxBastionsStackName" : { "Ref" : "LinuxBastionsStackName" },
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "PrivateUserNetwork" : { "Ref" : "PrivateUserNetwork" },
          "PrivateUserNetwork1" : { "Ref" : "PrivateUserNetwork1" },
          "PrivateUserNetwork2" : { "Ref" : "PrivateUserNetwork2" },
          "PrivateAdministratorNetwork" : { "Ref" : "PrivateAdministratorNetwork" },
          "PrivateAdministratorNetwork1" : { "Ref" : "PrivateAdministratorNetwork1" },
          "PrivateAdministratorNetwork2" : { "Ref" : "PrivateAdministratorNetwork2" }
        }
      }
    },

    "FileSystem" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Fn::ImportValue" : { "Fn::Sub" : "${StandardBucketsStackName}-TemplatesBucket" }}, "/", { "Ref" : "TemplateFolder" }, "/Application-WebSphereMQ-FileSystem.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "MountTargetSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.MountTargetSecurityGroup" ]},
          "ApplicationName" : { "Ref" : "ApplicationName" }
        }
      }
    },

    "QueueInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Fn::If" : [ "ConfigureGlobalS3", "s3", { "Fn::Sub" : "s3-${AWS::Region}" }]}, ".amazonaws.com/", { "Fn::ImportValue" : { "Fn::Sub" : "${StandardBucketsStackName}-TemplatesBucket" }}, "/", { "Ref" : "TemplateFolder" }, "/Application-WebSphereMQ-QueueInstances.json" ]]},
        "Parameters" : {
          "VPCStackName" : { "Ref" : "VPCStackName" },
          "CustomIdentifierFunctionsStackName" : { "Ref" : "CustomIdentifierFunctionsStackName" },
          "StandardCIDRFunctionsStackName" : { "Ref" : "StandardCIDRFunctionsStackName" },
          "StandardAMIFunctionsStackName" : { "Ref" : "StandardAMIFunctionsStackName" },
          "StandardBucketsStackName" : { "Ref" : "StandardBucketsStackName" },
          "StandardTopicsStackName" : { "Ref" : "StandardTopicsStackName" },
          "KeyName" : { "Ref" : "KeyName" },
          "Role" : { "Fn::GetAtt" : [ "Roles", "Outputs.Role" ]},
          "LogGroup" : { "Fn::If" : [ "ConfigureLogs", { "Fn::GetAtt" : [ "Logs", "Outputs.LogGroup" ]}, "" ]},
          "InstanceSecurityGroup" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.InstanceSecurityGroup" ]},
          "FileSystem" : { "Fn::GetAtt" : [ "FileSystem", "Outputs.FileSystem" ]},
          "CompanyName" : { "Ref" : "CompanyName" },
          "SystemName" : { "Ref" : "SystemName" },
          "EnvironmentType" : { "Ref" : "EnvironmentType" },
          "OSName" : { "Ref" : "OSName" },
          "ProductFolder" : { "Ref" : "ProductFolder" },
          "ProductObject" : { "Ref" : "ProductObject" },
          "ConfigurationFolder" : { "Ref" : "ConfigurationFolder" },
          "ConfigurationObject" : { "Ref" : "ConfigurationObject" },
          "ApplicationName" : { "Ref" : "ApplicationName" },
          "UseStaticAddress" : { "Ref" : "UseStaticAddress" },
          "UseFileSystemMonitoring" : { "Ref" : "UseFileSystemMonitoring" },
          "LogRetention" : { "Ref" : "LogRetention" },
          "Schedule" : { "Ref" : "Schedule" }
        }
      }
    }
  },

  "Outputs" : {
    "InstanceSecurityGroup" : {
      "Description" : "The Instance SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.InstanceSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-InstanceSecurityGroup" }}
    },

    "MountTargetSecurityGroup" : {
      "Description" : "The MountTarget SecurityGroup",
      "Value" : { "Fn::GetAtt" : [ "SecurityGroups", "Outputs.MountTargetSecurityGroup" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-MountTargetSecurityGroup" }}
    }
  }
}
