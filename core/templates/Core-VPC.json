{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Core-VPC Template. This creates the Core VPC within the Core Account. Only a single Core can exist. The VPC is always Multi-Zone. It can optionally be Multi-NAT Gateway. It can optionally have a VPN Gateway.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [
            "HostedZoneStackName"
          ]
        },
        {
          "Label" : { "default" : "VPC Configuration" },
          "Parameters" : [
            "Name",
            "Network",
            "UseMultiZoneNatGateways",
            "UseVPNGateway"
          ]
        }
      ],

      "ParameterLabels" : {
        "HostedZoneStackName" : { "default" : "HostedZone Stack Name" },
        "Name" : { "default" : "Name" },
        "Network" : { "default" : "Network" },
        "UseMultiZoneNatGateways" : { "default" : "Use Multi-Zone NAT Gateways" },
        "UseVPNGateway" : { "default" : "Use a VPN Gateway" }
      }
    }
  },

  "Parameters" : {
    "HostedZoneStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Environment HostedZone",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "Production-HostedZone",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "Name" : {
      "Description" : "Name of the Core Environment associated with the Stack",
      "Type" : "String",
      "Default" : "Core",
      "AllowedValues" : [ "Core" ],
      "ConstraintDescription" : "must be one of the following: Core (may expand later)."
    },

    "Network" : {
      "Description" : "VPC /16 Network",
      "Type" : "String",
      "Default" : "10.46.0.0/16",
      "AllowedPattern" : "^(10\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.0\\.0/16)$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form 10.X.0.0/16."
    },

    "UseMultiZoneNatGateways" : {
      "Description" : "Create NAT Gateways in multiple Availability Zones",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "UseVPNGateway" : {
      "Description" : "Create VPNGateway",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    }
  },

  "Mappings" : {
    "SubnetMap" : {
      "Public"           : { "ZoneA" :  "0.0/24", "ZoneB" :  "64.0/24", "ZoneC" : "128.0/24", "ZoneD" : "192.0/24" },
      "Web"              : { "ZoneA" :  "8.0/24", "ZoneB" :  "72.0/24", "ZoneC" : "136.0/24", "ZoneD" : "200.0/24" },
      "Application"      : { "ZoneA" : "16.0/24", "ZoneB" :  "80.0/24", "ZoneC" : "144.0/24", "ZoneD" : "208.0/24" },
      "Cache"            : { "ZoneA" : "32.0/24", "ZoneB" :  "96.0/24", "ZoneC" : "160.0/24", "ZoneD" : "224.0/24" },
      "Database"         : { "ZoneA" : "40.0/24", "ZoneB" : "104.0/24", "ZoneC" : "168.0/24", "ZoneD" : "232.0/24" },
      "ProductionQueue"  : { "ZoneA" : "48.0/24", "ZoneB" : "112.0/24", "ZoneC" : "176.0/24", "ZoneD" : "240.0/24" },
      "StagingQueue"     : { "ZoneA" : "49.0/24", "ZoneB" : "113.0/24", "ZoneC" : "177.0/24", "ZoneD" : "241.0/24" },
      "TestingQueue"     : { "ZoneA" : "50.0/24", "ZoneB" : "114.0/24", "ZoneC" : "178.0/24", "ZoneD" : "242.0/24" },
      "DevelopmentQueue" : { "ZoneA" : "51.0/24", "ZoneB" : "115.0/24", "ZoneC" : "179.0/24", "ZoneD" : "243.0/24" },
      "Log"              : { "ZoneA" : "56.0/24", "ZoneB" : "120.0/24", "ZoneC" : "184.0/24", "ZoneD" : "248.0/24" },
      "Identity"         : { "ZoneA" : "60.0/24", "ZoneB" : "124.0/24", "ZoneC" : "188.0/24", "ZoneD" : "252.0/24" },
      "Management"       : { "ZoneA" : "62.0/24", "ZoneB" : "126.0/24", "ZoneC" : "190.0/24", "ZoneD" : "254.0/24" }
    }
  },

  "Conditions" : {
    "ConfigureDNS" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "HostedZoneStackName" }, "" ]}]},
    "ConfigureMultiZoneNatGateways" : { "Fn::Equals" : [{ "Ref" : "UseMultiZoneNatGateways" }, "true" ]},
    "ConfigureVPNGateway" : { "Fn::Equals" : [{ "Ref" : "UseVPNGateway" }, "true" ]}
  },

  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : { "Ref" : "Network" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-VPC" }}
        ]
      }
    },

    "DHCPOptions" : {
      "Type" : "AWS::EC2::DHCPOptions",
      "Properties" : {
        "DomainName" : { "Fn::ImportValue" : { "Fn::Sub" : "${HostedZoneStackName}-Domain" }},
        "DomainNameServers" : [ "AmazonProvidedDNS" ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-DHCPOptions" }}
        ]
      },
      "Condition" : "ConfigureDNS"
    },

    "VPCDHCPOptionsAssociation" : {
      "Type" : "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "DhcpOptionsId" : { "Ref" : "DHCPOptions" }
      },
      "Condition" : "ConfigureDNS"
    },

    "PrivateHostedZone" : {
      "Type" : "AWS::Route53::HostedZone",
      "Properties" : {
        "HostedZoneConfig" : {
          "Comment" : { "Fn::Join" : [ "", [ "Private Zone for ", { "Fn::ImportValue" : { "Fn::Sub" : "${HostedZoneStackName}-Domain" }}]]}
        },
        "Name" : { "Fn::ImportValue" : { "Fn::Sub" : "${HostedZoneStackName}-Domain" }},
        "VPCs" : [{
          "VPCId" : { "Ref" : "VPC" },
          "VPCRegion" : { "Ref" : "AWS::Region" }
        }],
        "HostedZoneTags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PrivateHostedZone" }}
        ]
      },
      "Condition" : "ConfigureDNS"
    },

    "PrivateReverseHostedZone" : {
      "Type" : "AWS::Route53::HostedZone",
      "Properties" : {
        "HostedZoneConfig" : {
          "Comment" : { "Fn::Join" : [ "", [ "Private Reverse Zone for ", { "Fn::ImportValue" : { "Fn::Sub" : "${HostedZoneStackName}-Domain" }}]]}
        },
        "Name" : { "Fn::Join" : [ ".", [ { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]}, "10.in-addr.arpa" ]]},
        "VPCs" : [{
          "VPCId" : { "Ref" : "VPC" },
          "VPCRegion" : { "Ref" : "AWS::Region" }
        }],
        "HostedZoneTags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PrivateReverseHostedZone" }}
        ]
      },
      "Condition" : "ConfigureDNS"
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-InternetGateway" }}
        ]
      }
    },

    "InternetGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "Public", "ZoneA" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicSubnetA" }}
        ]
      }
    },

    "PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "Public", "ZoneB" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicSubnetB" }}
        ]
      }
    },

    "WebSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "Web", "ZoneA" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-WebSubnetA" }}
        ]
      }
    },

    "WebSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "Web", "ZoneB" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-WebSubnetB" }}
        ]
      }
    },

    "ApplicationSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "Application", "ZoneA" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-ApplicationSubnetA" }}
        ]
      }
    },

    "ApplicationSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "Application", "ZoneB" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-ApplicationSubnetB" }}
        ]
      }
    },

    "DatabaseSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "Database", "ZoneA" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-DatabaseSubnetA" }}
        ]
      }
    },

    "DatabaseSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "Database", "ZoneB" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-DatabaseSubnetB" }}
        ]
      }
    },

    "ProductionQueueSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "ProductionQueue", "ZoneA" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-ProductionQueueSubnetA" }}
        ]
      }
    },

    "ProductionQueueSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "ProductionQueue", "ZoneB" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-ProductionQueueSubnetB" }}
        ]
      }
    },

    "StagingQueueSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "StagingQueue", "ZoneA" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-StagingQueueSubnetA" }}
        ]
      }
    },

    "StagingQueueSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "StagingQueue", "ZoneB" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-StagingQueueSubnetB" }}
        ]
      }
    },

    "TestingQueueSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "TestingQueue", "ZoneA" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-TestingQueueSubnetA" }}
        ]
      }
    },

    "TestingQueueSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "TestingQueue", "ZoneB" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-TestingQueueSubnetB" }}
        ]
      }
    },

    "DevelopmentQueueSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "DevelopmentQueue", "ZoneA" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-DevelopmentQueueSubnetA" }}
        ]
      }
    },

    "DevelopmentQueueSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::Join" : [ ".", [ "10", { "Fn::Select" : [ "1", { "Fn::Split" : [ ".", { "Ref" : "Network" }]}]},
                                              { "Fn::FindInMap" : [ "SubnetMap", "DevelopmentQueue", "ZoneB" ]}]]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-DevelopmentQueueSubnetB" }}
        ]
      }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicRouteTable" }}
        ]
      }
    },

    "PublicDefaultRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      },
      "DependsOn" : "InternetGatewayAttachment"
    },

    "PublicSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "WebSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "WebSubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "WebSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "WebSubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "NatGatewayAEIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      },
      "DependsOn" : "InternetGatewayAttachment"
    },

    "NatGatewayBEIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      },
      "DependsOn" : "InternetGatewayAttachment",
      "Condition" : "ConfigureMultiZoneNatGateways"
    },

    "NatGatewayA" : {
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "NatGatewayAEIP", "AllocationId" ]},
        "SubnetId" : { "Ref" : "PublicSubnetA" }
      }
    },

    "NatGatewayB" : {
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "NatGatewayBEIP", "AllocationId" ]},
        "SubnetId" : { "Ref" : "PublicSubnetB" }
      },
      "Condition" : "ConfigureMultiZoneNatGateways"
    },

    "PrivateRouteTableA" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PrivateRouteTableA" }}
        ]
      }
    },

    "PrivateDefaultRouteA" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NatGatewayA" }
      }
    },

    "ApplicationSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "ApplicationSubnetA" }
      }
    },

    "DatabaseSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "DatabaseSubnetA" }
      }
    },

    "ProductionQueueSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "ProductionQueueSubnetA" }
      }
    },

    "StagingQueueSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "StagingQueueSubnetA" }
      }
    },

    "TestingQueueSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "TestingQueueSubnetA" }
      }
    },

    "DevelopmentQueueSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "DevelopmentQueueSubnetA" }
      }
    },

    "PrivateRouteTableB" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PrivateRouteTableB" }}
        ]
      }
    },

    "PrivateDefaultRouteB" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Fn::If" : [ "ConfigureMultiZoneNatGateways", { "Ref" : "NatGatewayB" }, { "Ref" : "NatGatewayA" }]}
      }
    },

    "ApplicationSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "ApplicationSubnetB" }
      }
    },

    "DatabaseSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "DatabaseSubnetB" }
      }
    },

    "ProductionQueueSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "ProductionQueueSubnetB" }
      }
    },

    "StagingQueueSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "StagingQueueSubnetB" }
      }
    },

    "TestingQueueSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "TestingQueueSubnetB" }
      }
    },

    "DevelopmentQueueSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "DevelopmentQueueSubnetB" }
      }
    },

    "VPNGateway" : {
      "Type" : "AWS::EC2::VPNGateway",
      "Properties" : {
        "Type" : "ipsec.1",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-VPNGateway" }}
        ]
      },
      "Condition" : "ConfigureVPNGateway"
    },

    "VPNGatewayAttachment" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "VpnGatewayId" : { "Ref" : "VPNGateway" }
      },
      "Condition" : "ConfigureVPNGateway"
    },

    "VPNGatewayRoutePropagation" : {
      "Type" : "AWS::EC2::VPNGatewayRoutePropagation",
      "Properties" : {
        "VpnGatewayId" : { "Ref" : "VPNGateway" },
        "RouteTableIds" : [{ "Ref" : "PublicRouteTable" }, { "Ref" : "PrivateRouteTableA" }, { "Ref" : "PrivateRouteTableB" }]
      },
      "DependsOn" : "VPNGatewayAttachment",
      "Condition" : "ConfigureVPNGateway"
    }
  },

  "Outputs" : {
    "VPC" : {
      "Description" : "The VPC",
      "Value" :  { "Ref" : "VPC" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPC" }}
    },

    "VPCName" : {
      "Description" : "The VPC Name",
      "Value" :  "Core",
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCName" }}
    },

    "VPCNetwork" : {
      "Description" : "The VPC Network",
      "Value" :  { "Fn::GetAtt" : [ "VPC", "CidrBlock" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCNetwork" }}
    },

    "VPCDomain" : {
      "Description" : "The VPC Domain",
      "Value" :  { "Fn::ImportValue" : { "Fn::Sub" : "${HostedZoneStackName}-Domain" }},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCDomain" }},
      "Condition" : "ConfigureDNS"
    },

    "DHCPOptions" : {
      "Description" : "The DHCPOptions",
      "Value" :  { "Ref" : "DHCPOptions" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-DHCPOptions" }},
      "Condition" : "ConfigureDNS"
    },

    "PublicHostedZone" : {
      "Description" : "The Public HostedZone",
      "Value" : { "Fn::ImportValue" : { "Fn::Sub" : "${HostedZoneStackName}-HostedZone" }},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicHostedZone" }},
      "Condition" : "ConfigureDNS"
    },

    "PrivateHostedZone" : {
      "Description" : "The Private HostedZone",
      "Value" :  { "Ref" : "PrivateHostedZone" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivateHostedZone" }},
      "Condition" : "ConfigureDNS"
    },

    "PrivateReverseHostedZone" : {
      "Description" : "The Private Reverse HostedZone",
      "Value" :  { "Ref" : "PrivateReverseHostedZone" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivateReverseHostedZone" }},
      "Condition" : "ConfigureDNS"
    },

    "VPNGateway" : {
      "Description" : "The VPNGateway",
      "Value" :  { "Ref" : "VPNGateway" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPNGateway" }},
      "Condition" : "ConfigureVPNGateway"
    },

    "PublicSubnetA" : {
      "Description" : "The Public Subnet in Availability Zone A",
      "Value" :  { "Ref" : "PublicSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicSubnetA" }}
    },

    "PublicSubnetB" : {
      "Description" : "The Public Subnet in Availability Zone B",
      "Value" :  { "Ref" : "PublicSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicSubnetB" }}
    },

    "WebSubnetA" : {
      "Description" : "The Web Subnet in Availability Zone A",
      "Value" :  { "Ref" : "WebSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-WebSubnetA" }}
    },

    "WebSubnetB" : {
      "Description" : "The Web Subnet in Availability Zone B",
      "Value" :  { "Ref" : "WebSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-WebSubnetB" }}
    },

    "ApplicationSubnetA" : {
      "Description" : "The Application Subnet in Availability Zone A",
      "Value" :  { "Ref" : "ApplicationSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ApplicationSubnetA" }}
    },

    "ApplicationSubnetB" : {
      "Description" : "The Application Subnet in Availability Zone B",
      "Value" :  { "Ref" : "ApplicationSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ApplicationSubnetB" }}
    },

    "DatabaseSubnetA" : {
      "Description" : "The Database Subnet in Availability Zone A",
      "Value" :  { "Ref" : "DatabaseSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-DatabaseSubnetA" }}
    },

    "DatabaseSubnetB" : {
      "Description" : "The Database Subnet in Availability Zone B",
      "Value" :  { "Ref" : "DatabaseSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-DatabaseSubnetB" }}
    },

    "ProductionQueueSubnetA" : {
      "Description" : "The Production Queue Subnet in Availability Zone A",
      "Value" :  { "Ref" : "ProductionQueueSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ProductionQueueSubnetA" }}
    },

    "ProductionQueueSubnetB" : {
      "Description" : "The Production Queue Subnet in Availability Zone B",
      "Value" :  { "Ref" : "ProductionQueueSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ProductionQueueSubnetB" }}
    },

    "StagingQueueSubnetA" : {
      "Description" : "The Staging Queue Subnet in Availability Zone A",
      "Value" :  { "Ref" : "StagingQueueSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-StagingQueueSubnetA" }}
    },

    "StagingQueueSubnetB" : {
      "Description" : "The Staging Queue Subnet in Availability Zone B",
      "Value" :  { "Ref" : "StagingQueueSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-StagingQueueSubnetB" }}
    },

    "TestingQueueSubnetA" : {
      "Description" : "The Testing Queue Subnet in Availability Zone A",
      "Value" :  { "Ref" : "TestingQueueSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-TestingQueueSubnetA" }}
    },

    "TestingQueueSubnetB" : {
      "Description" : "The Testing Queue Subnet in Availability Zone B",
      "Value" :  { "Ref" : "TestingQueueSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-TestingQueueSubnetB" }}
    },

    "DevelopmentQueueSubnetA" : {
      "Description" : "The Development Queue Subnet in Availability Zone A",
      "Value" :  { "Ref" : "DevelopmentQueueSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-DevelopmentQueueSubnetA" }}
    },

    "DevelopmentQueueSubnetB" : {
      "Description" : "The Development Queue Subnet in Availability Zone B",
      "Value" :  { "Ref" : "DevelopmentQueueSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-DevelopmentQueueSubnetB" }}
    },

    "PublicRouteTable" : {
      "Description" : "The Public RouteTable",
      "Value" :  { "Ref" : "PublicRouteTable" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicRouteTable" }}
    },

    "PrivateRouteTableA" : {
      "Description" : "The Private RouteTable in Availability Zone A",
      "Value" :  { "Ref" : "PrivateRouteTableA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivateRouteTableA" }}
    },

    "PrivateRouteTableB" : {
      "Description" : "The Private RouteTable in Availability Zone B",
      "Value" :  { "Ref" : "PrivateRouteTableB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivateRouteTableB" }}
    }
  }
}
