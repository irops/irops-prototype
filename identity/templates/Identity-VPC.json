{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Identity-VPC Template. This creates the Identity VPC within the Identity Account. Only a single Identity can exist. The VPC is always Multi-Zone. It can optionally be Multi-NAT Gateway. It can optionally have a VPN Gateway.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [
            "StandardCIDRFunctionsStackName"
          ]
        },
        {
          "Label" : { "default" : "VPC Configuration" },
          "Parameters" : [
            "Name",
            "Network",
            "AddressesPerSubnet",
            "SubnetsPerAvailabilityZone",
            "AvailabilityZonesPerVPC",
            "PublicDomain",
            "PrivateDomain",
            "NetBIOSDomain",
            "UsePublicHostedZone",
            "UsePrivateHostedZone",
            "UseMultiZoneNatGateways",
            "UseVPNGateway"
          ]
        }
      ],

      "ParameterLabels" : {
        "StandardCIDRFunctionsStackName" : { "default" : "StandardCIDRFunctions Stack Name" },
        "Name" : { "default" : "Name" },
        "Network" : { "default" : "Network" },
        "AddressesPerSubnet" : { "default" : "Addresses Per Subnet" },
        "SubnetsPerAvailabilityZone" : { "default" : "Subnets Per Availability Zone" },
        "AvailabilityZonesPerVPC" : { "default" : "Availability Zones Per VPC" },
        "PublicDomain" : { "default" : "Public Domain" },
        "PrivateDomain" : { "default" : "Private Domain" },
        "NetBIOSDomain" : { "default" : "NetBIOS Domain" },
        "UsePublicHostedZone" : { "default" : "Use a Public HostedZone" },
        "UsePrivateHostedZone" : { "default" : "Use a Private HostedZone" },
        "UseMultiZoneNatGateways" : { "default" : "Use Multi-Zone NAT Gateways" },
        "UseVPNGateway" : { "default" : "Use a VPN Gateway" }
      }
    }
  },

  "Parameters" : {
    "StandardCIDRFunctionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Standard CIDR Functions",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "StandardCIDRFunctions",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "Name" : {
      "Description" : "Name of the Identity Environment associated with the Stack",
      "Type" : "String",
      "Default" : "Identity",
      "AllowedValues" : [ "Identity" ],
      "ConstraintDescription" : "must be one of the following: Identity (may expand later)."
    },

    "Network" : {
      "Description" : "VPC Network",
      "Type" : "String",
      "Default" : "172.21.62.0/23",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-7]))$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/16-27."
    },

    "AddressesPerSubnet" : {
      "Description" : "Number of Addresses per Subnet",
      "Type" : "Number",
      "Default" : 32,
      "AllowedValues" : [ 16, 32, 64, 128, 256, 512, 1024, 2048, 4096 ],
      "ConstraintDescription" : "must be one of the following: 16, 32, 64, 128, 256, 512, 1024, 2048 or 4096."
    },

    "SubnetsPerAvailabilityZone" : {
      "Description" : "Number of Subnets per AvailabilityZone",
      "Type" : "Number",
      "Default" : 8,
      "AllowedValues" : [ 8 ],
      "ConstraintDescription" : "must be 8."
    },

    "AvailabilityZonesPerVPC" : {
      "Description" : "Number of AvailabilityZones",
      "Type" : "String",
      "Default" : "2",
      "AllowedValues" : [ 2 ],
      "ConstraintDescription" : "must be 2."
    },

    "PublicDomain" : {
      "Description" : "Public Domain associated with the Stack",
      "Type" : "String",
      "MinLength" : 7,
      "MaxLength" : 64,
      "Default" : "us-west-2.tvl.iropshub.com",
      "AllowedPattern" : "^((?!-)[a-z0-9-]{1,63}(?<!-)\\.)+[a-z]{2,6}$",
      "ConstraintDescription" : "must be a valid domain name and contain only lower-case letters, numbers, dashes and periods."
    },

    "PrivateDomain" : {
      "Description" : "Private Domain associated with the Stack",
      "Type" : "String",
      "MinLength" : 7,
      "MaxLength" : 64,
      "Default" : "iropscmp.travel.svcs.entsvcs.com",
      "AllowedPattern" : "^((?!-)[a-z0-9-]{1,63}(?<!-)\\.)+[a-z]{2,6}$",
      "ConstraintDescription" : "must be a valid DNS domain name."
    },

    "NetBIOSDomain" : {
      "Description" : "Private Domain associated with the Stack",
      "Type" : "String",
      "MinLength" : 2,
      "MaxLength" : 15,
      "Default" : "iropscmp",
      "AllowedPattern" : "(^$|^[a-zA-Z0-9]{2,15}$)",
      "ConstraintDescription" : "must be a valid NetBIOS domain name."
    },

    "UsePublicHostedZone" : {
      "Description" : "Create PublicHostedZone",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "UsePrivateHostedZone" : {
      "Description" : "Create PrivateHostedZone, and associate with VPC via DHCPOptions",
      "Type" : "String",
      "Default" : "false",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "UseMultiZoneNatGateways" : {
      "Description" : "Create NAT Gateways in multiple Availability Zones",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "UseVPNGateway" : {
      "Description" : "Create VPNGateway",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    }
  },

  "Conditions" : {
    "ConfigurePublicDomain" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "PublicDomain" }, "" ]}]},
    "ConfigurePrivateDomain" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "PrivateDomain" }, "" ]}]},
    "ConfigureNetBIOSDomain" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "NetBIOSDomain" }, "" ]}]},
    "ConfigurePublicHostedZone" : { "Fn::Equals" : [{ "Ref" : "UsePublicHostedZone" }, "true" ]},
    "ConfigurePrivateHostedZone" : { "Fn::Equals" : [{ "Ref" : "UsePrivateHostedZone" }, "true" ]},
    "ConfigureMultiZoneNatGateways" : { "Fn::Equals" : [{ "Ref" : "UseMultiZoneNatGateways" }, "true" ]},
    "ConfigureVPNGateway" : { "Fn::Equals" : [{ "Ref" : "UseVPNGateway" }, "true" ]}
  },

  "Resources" : {
    "SubnetCalculator" : {
      "Type" : "Custom::SubnetCalculator",
      "Properties" : {
        "ServiceToken" : { "Fn::ImportValue" : { "Fn::Sub" : "${StandardCIDRFunctionsStackName}-SubnetCalculatorFunctionArn" }},
        "VpcCidrBlock" : { "Ref" : "Network" },
        "Addresses" : { "Ref" : "AddressesPerSubnet" },
        "Subnets" : { "Ref" : "SubnetsPerAvailabilityZone" },
        "AvailabilityZones" : { "Ref" : "AvailabilityZonesPerVPC" }
      }
    },

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : { "Ref" : "Network" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-VPC" }}
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-InternetGateway" }}
        ]
      }
    },

    "InternetGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicHostedZone" : {
      "Type" : "AWS::Route53::HostedZone",
      "Properties" : {
        "HostedZoneConfig" : {
          "Comment" : { "Fn::Sub" : "Public Zone for ${PublicDomain}" }
        },
        "Name" : { "Ref" : "PublicDomain" },
        "HostedZoneTags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicHostedZone" }}
        ]
      },
      "Condition" : "ConfigurePublicHostedZone"
    },

    "PrivateHostedZone" : {
      "Type" : "AWS::Route53::HostedZone",
      "Properties" : {
        "HostedZoneConfig" : {
          "Comment" : { "Fn::Sub" : "Private Zone for ${PrivateDomain}" }
        },
        "Name" : { "Ref" : "PrivateDomain" },
        "VPCs" : [{
          "VPCId" : { "Ref" : "VPC" },
          "VPCRegion" : { "Ref" : "AWS::Region" }
        }],
        "HostedZoneTags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PrivateHostedZone" }}
        ]
      },
      "Condition" : "ConfigurePrivateHostedZone"
    },

    "DHCPOptions" : {
      "Type" : "AWS::EC2::DHCPOptions",
      "Properties" : {
        "DomainName" : { "Ref" : "PrivateDomain" },
        "DomainNameServers" : [ "AmazonProvidedDNS" ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-DHCPOptions" }}
        ]
      },
      "Condition" : "ConfigurePrivateHostedZone"
    },

    "VPCDHCPOptionsAssociation" : {
      "Type" : "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "DhcpOptionsId" : { "Ref" : "DHCPOptions" }
      },
      "Condition" : "ConfigurePrivateHostedZone"
    },

    "VPNGateway" : {
      "Type" : "AWS::EC2::VPNGateway",
      "Properties" : {
        "Type" : "ipsec.1",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-VPNGateway" }}
        ]
      },
      "Condition" : "ConfigureVPNGateway"
    },

    "VPNGatewayAttachment" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "VpnGatewayId" : { "Ref" : "VPNGateway" }
      },
      "Condition" : "ConfigureVPNGateway"
    },

    "VPNGatewayRoutePropagation" : {
      "Type" : "AWS::EC2::VPNGatewayRoutePropagation",
      "Properties" : {
        "VpnGatewayId" : { "Ref" : "VPNGateway" },
        "RouteTableIds" : [{ "Ref" : "PublicRouteTable" }, { "Ref" : "PrivateRouteTableA" }, { "Ref" : "PrivateRouteTableB" }]
      },
      "DependsOn" : "VPNGatewayAttachment",
      "Condition" : "ConfigureVPNGateway"
    },

    "PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet0A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicSubnetA" }}
        ]
      }
    },

    "PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet0B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicSubnetB" }}
        ]
      }
    },

    "IdentitySubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet7A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-IdentitySubnetA" }}
        ]
      }
    },

    "IdentitySubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet7A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-IdentitySubnetB" }}
        ]
      }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicRouteTable" }}
        ]
      }
    },

    "PublicDefaultRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      },
      "DependsOn" : "InternetGatewayAttachment"
    },

    "PublicSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "NatGatewayAEIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      },
      "DependsOn" : "InternetGatewayAttachment"
    },

    "NatGatewayBEIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      },
      "DependsOn" : "InternetGatewayAttachment",
      "Condition" : "ConfigureMultiZoneNatGateways"
    },

    "NatGatewayA" : {
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "NatGatewayAEIP", "AllocationId" ]},
        "SubnetId" : { "Ref" : "PublicSubnetA" }
      }
    },

    "NatGatewayB" : {
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "NatGatewayBEIP", "AllocationId" ]},
        "SubnetId" : { "Ref" : "PublicSubnetB" }
      },
      "Condition" : "ConfigureMultiZoneNatGateways"
    },

    "PrivateRouteTableA" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PrivateRouteTableA" }}
        ]
      }
    },

    "PrivateDefaultRouteA" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NatGatewayA" }
      }
    },

    "IdentitySubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "IdentitySubnetA" }
      }
    },

    "PrivateRouteTableB" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PrivateRouteTableB" }}
        ]
      }
    },

    "PrivateDefaultRouteB" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Fn::If" : [ "ConfigureMultiZoneNatGateways", { "Ref" : "NatGatewayB" }, { "Ref" : "NatGatewayA" }]}
      }
    },

    "IdentitySubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "IdentitySubnetB" }
      }
    }
  },

  "Outputs" : {
    "VPC" : {
      "Description" : "The VPC",
      "Value" :  { "Ref" : "VPC" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPC" }}
    },

    "VPCName" : {
      "Description" : "The VPC Name",
      "Value" :  { "Ref" : "Name" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCName" }}
    },

    "VPCNetwork" : {
      "Description" : "The VPC Network",
      "Value" :  { "Fn::GetAtt" : [ "VPC", "CidrBlock" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCNetwork" }}
    },

    "VPCPublicDomain" : {
      "Description" : "The VPC Public Domain",
      "Value" :  { "Ref" : "PublicDomain" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCPublicDomain" }},
      "Condition" : "ConfigurePublicDomain"
    },

    "VPCPrivateDomain" : {
      "Description" : "The VPC Private Domain",
      "Value" :  { "Ref" : "PrivateDomain" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCPrivateDomain" }},
      "Condition" : "ConfigurePrivateDomain"
    },

    "VPCNetBIOSDomain" : {
      "Description" : "The VPC NetBIOS Domain",
      "Value" :  { "Ref" : "NetBIOSDomain" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCNetBIOSDomain" }},
      "Condition" : "ConfigureNetBIOSDomain"
    },

    "PublicHostedZone" : {
      "Description" : "The Public HostedZone",
      "Value" :  { "Ref" : "PublicHostedZone" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicHostedZone" }},
      "Condition" : "ConfigurePublicHostedZone"
    },

    "PrivateHostedZone" : {
      "Description" : "The Private HostedZone",
      "Value" :  { "Ref" : "PrivateHostedZone" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivateHostedZone" }},
      "Condition" : "ConfigurePrivateHostedZone"
    },

    "VPNGateway" : {
      "Description" : "The VPNGateway",
      "Value" :  { "Ref" : "VPNGateway" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPNGateway" }},
      "Condition" : "ConfigureVPNGateway"
    },

    "ZoneA" : {
      "Description" : "The AvailabilityZone used for ZoneA",
      "Value" :  { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ZoneA" }}
    },

    "ZoneB" : {
      "Description" : "The AvailabilityZone used for ZoneB",
      "Value" :  { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ZoneB" }}
    },

    "PublicSubnetA" : {
      "Description" : "The Public Subnet in Availability Zone A",
      "Value" :  { "Ref" : "PublicSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicSubnetA" }}
    },

    "PublicSubnetB" : {
      "Description" : "The Public Subnet in Availability Zone B",
      "Value" :  { "Ref" : "PublicSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicSubnetB" }}
    },

    "IdentitySubnetA" : {
      "Description" : "The Identity Subnet in Availability Zone A",
      "Value" :  { "Ref" : "IdentitySubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-IdentitySubnetA" }}
    },

    "IdentitySubnetB" : {
      "Description" : "The Identity Subnet in Availability Zone B",
      "Value" :  { "Ref" : "IdentitySubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-IdentitySubnetB" }}
    },

    "PublicRouteTable" : {
      "Description" : "The Public RouteTable",
      "Value" :  { "Ref" : "PublicRouteTable" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicRouteTable" }}
    },

    "PrivateRouteTableA" : {
      "Description" : "The Private RouteTable in Availability Zone A",
      "Value" :  { "Ref" : "PrivateRouteTableA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivateRouteTableA" }}
    },

    "PrivateRouteTableB" : {
      "Description" : "The Private RouteTable in Availability Zone B",
      "Value" :  { "Ref" : "PrivateRouteTableB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivateRouteTableB" }}
    }
  }
}
