{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Environment-VPC Template. This creates the Environment VPC within an Environment Account. Multiple Environments can co-exist. The VPC is always Multi-Zone. It can optionally be Multi-NAT Gateway. It can optionally have a VPN Gateway.",

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : { "default" : "Stack Dependencies" },
          "Parameters" : [
            "StandardCIDRFunctionsStackName",
            "HostedZoneStackName"
          ]
        },
        {
          "Label" : { "default" : "VPC Configuration" },
          "Parameters" : [
            "Name",
            "Network",
            "AddressesPerSubnet",
            "SubnetsPerAvailabilityZone",
            "AvailabilityZonesPerVPC",
            "UseMultiZoneNatGateways",
            "UseVPNGateway"
          ]
        }
      ],

      "ParameterLabels" : {
        "StandardCIDRFunctionsStackName" : { "default" : "StandardCIDRFunctions Stack Name" },
        "HostedZoneStackName" : { "default" : "HostedZone Stack Name" },
        "Name" : { "default" : "Name" },
        "Network" : { "default" : "Network" },
        "AddressesPerSubnet" : { "default" : "Addresses Per Subnet" },
        "SubnetsPerAvailabilityZone" : { "default" : "Subnets Per Availability Zone" },
        "AvailabilityZonesPerVPC" : { "default" : "Availability Zones Per VPC" },
        "UseMultiZoneNatGateways" : { "default" : "Use Multi-Zone NAT Gateways" },
        "UseVPNGateway" : { "default" : "Use a VPN Gateway" }
      }
    }
  },

  "Parameters" : {
    "StandardCIDRFunctionsStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Standard CIDR Functions",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "StandardCIDRFunctions",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "HostedZoneStackName" : {
      "Description" : "Name of the CloudFormation Stack containing the Environment HostedZone",
      "Type" : "String",
      "MaxLength" : 64,
      "Default" : "Production-HostedZone",
      "AllowedPattern" : "(^$|^[A-Z][-a-zA-Z0-9]*$)",
      "ConstraintDescription" : "must begin with an upper case letter and contain alphanumeric characters and dashes."
    },

    "Name" : {
      "Description" : "Name of the Environment associated with the Stack",
      "Type" : "String",
      "Default" : "Production",
      "AllowedValues" : [ "Production", "Staging", "Testing", "Development" ],
      "ConstraintDescription" : "must be one of the following: Production, Staging, Testing, Development."
    },

    "Network" : {
      "Description" : "VPC Network",
      "Type" : "String",
      "Default" : "172.21.0.0/21",
      "AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-7]))$",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/16-27."
    },

    "AddressesPerSubnet" : {
      "Description" : "Number of Addresses per Subnet",
      "Type" : "Number",
      "Default" : 32,
      "AllowedValues" : [ 16, 32, 64, 128, 256, 512, 1024, 2048, 4096 ],
      "ConstraintDescription" : "must be one of the following: 16, 32, 64, 128, 256, 512, 1024, 2048 or 4096."
    },

    "SubnetsPerAvailabilityZone" : {
      "Description" : "Number of Subnets per AvailabilityZone",
      "Type" : "Number",
      "Default" : 32,
      "AllowedValues" : [ 32 ],
      "ConstraintDescription" : "must be 32."
    },

    "AvailabilityZonesPerVPC" : {
      "Description" : "Number of AvailabilityZones",
      "Type" : "String",
      "Default" : "2",
      "AllowedValues" : [ 2 ],
      "ConstraintDescription" : "must be 2."
    },

    "UseMultiZoneNatGateways" : {
      "Description" : "Create NAT Gateways in multiple Availability Zones",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    },

    "UseVPNGateway" : {
      "Description" : "Create VPNGateway",
      "Type" : "String",
      "Default" : "true",
      "AllowedValues" : [ "true", "false" ],
      "ConstraintDescription" : "must be either true or false."
    }
  },

  "Conditions" : {
    "ConfigureDomainNames" : { "Fn::Not" : [{ "Fn::Equals" : [{ "Ref" : "HostedZoneStackName" }, "" ]}]},
    "ConfigureMultiZoneNatGateways" : { "Fn::Equals" : [{ "Ref" : "UseMultiZoneNatGateways" }, "true" ]},
    "ConfigureVPNGateway" : { "Fn::Equals" : [{ "Ref" : "UseVPNGateway" }, "true" ]}
  },

  "Resources" : {
    "SubnetCalculator" : {
      "Type" : "Custom::SubnetCalculator",
      "Properties" : {
        "ServiceToken" : { "Fn::ImportValue" : { "Fn::Sub" : "${StandardCIDRFunctionsStackName}-SubnetCalculatorFunctionArn" }},
        "VpcCidrBlock" : { "Ref" : "Network" },
        "Addresses" : { "Ref" : "AddressesPerSubnet" },
        "Subnets" : { "Ref" : "SubnetsPerAvailabilityZone" },
        "AvailabilityZones" : { "Ref" : "AvailabilityZonesPerVPC" }
      }
    },

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : { "Ref" : "Network" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-VPC" }}
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-InternetGateway" }}
        ]
      }
    },

    "InternetGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet0A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicSubnetA" }}
        ]
      }
    },

    "PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet0B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicSubnetB" }}
        ]
      }
    },

    "Public1SubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet1A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Public1SubnetA" }}
        ]
      }
    },

    "Public1SubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet1B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Public1SubnetB" }}
        ]
      }
    },

    "WebSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet4A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-WebSubnetA" }}
        ]
      }
    },

    "WebSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet4B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-WebSubnetB" }}
        ]
      }
    },

    "ApplicationSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet8A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-ApplicationSubnetA" }}
        ]
      }
    },

    "ApplicationSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet8B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-ApplicationSubnetB" }}
        ]
      }
    },

    "Application1SubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet9A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Application1SubnetA" }}
        ]
      }
    },

    "Application1SubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet9B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Application1SubnetB" }}
        ]
      }
    },

    "Application2SubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet10A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Application2SubnetA" }}
        ]
      }
    },

    "Application2SubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet10B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Application2SubnetB" }}
        ]
      }
    },

    "Application3SubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet11A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Application3SubnetA" }}
        ]
      }
    },

    "Application3SubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet11B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Application3SubnetB" }}
        ]
      }
    },

    "QueueSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet20A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-QueueSubnetA" }}
        ]
      }
    },

    "QueueSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet20B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-QueueSubnetB" }}
        ]
      }
    },

    "Queue1SubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet21A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Queue1SubnetA" }}
        ]
      }
    },

    "Queue1SubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet21B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Queue1SubnetB" }}
        ]
      }
    },

    "DatabaseSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet24A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-DatabaseSubnetA" }}
        ]
      }
    },

    "DatabaseSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet24B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-DatabaseSubnetB" }}
        ]
      }
    },

    "Database1SubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet25A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Database1SubnetA" }}
        ]
      }
    },

    "Database1SubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet25B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Database1SubnetB" }}
        ]
      }
    },

    "LogSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet28A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-LogSubnetA" }}
        ]
      }
    },

    "LogSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet28B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-LogSubnetB" }}
        ]
      }
    },

    "Log1SubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet29A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Log1SubnetA" }}
        ]
      }
    },

    "Log1SubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet29B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-Log1SubnetB" }}
        ]
      }
    },

    "BuildSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet30A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-BuildSubnetA" }}
        ]
      }
    },

    "BuildSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet30B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-BuildSubnetB" }}
        ]
      }
    },

    "IdentitySubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet31A" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-IdentitySubnetA" }}
        ]
      }
    },

    "IdentitySubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::GetAtt" : [ "SubnetCalculator", "Subnet31B" ]},
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-IdentitySubnetB" }}
        ]
      }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PublicRouteTable" }}
        ]
      }
    },

    "PublicDefaultRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      },
      "DependsOn" : "InternetGatewayAttachment"
    },

    "PublicSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "Public1SubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Public1SubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "Public1SubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "Public1SubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "WebSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "WebSubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "WebSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "WebSubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "NatGatewayAEIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      },
      "DependsOn" : "InternetGatewayAttachment"
    },

    "NatGatewayBEIP" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      },
      "DependsOn" : "InternetGatewayAttachment",
      "Condition" : "ConfigureMultiZoneNatGateways"
    },

    "NatGatewayA" : {
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "NatGatewayAEIP", "AllocationId" ]},
        "SubnetId" : { "Ref" : "PublicSubnetA" }
      }
    },

    "NatGatewayB" : {
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : [ "NatGatewayBEIP", "AllocationId" ]},
        "SubnetId" : { "Ref" : "PublicSubnetB" }
      },
      "Condition" : "ConfigureMultiZoneNatGateways"
    },

    "PrivateRouteTableA" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PrivateRouteTableA" }}
        ]
      }
    },

    "PrivateDefaultRouteA" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NatGatewayA" }
      }
    },

    "ApplicationSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "ApplicationSubnetA" }
      }
    },

    "Application1SubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "Application1SubnetA" }
      }
    },

    "Application2SubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "Application2SubnetA" }
      }
    },

    "Application3SubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "Application3SubnetA" }
      }
    },

    "QueueSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "QueueSubnetA" }
      }
    },

    "Queue1SubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "Queue1SubnetA" }
      }
    },

    "DatabaseSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "DatabaseSubnetA" }
      }
    },

    "Database1SubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "Database1SubnetA" }
      }
    },

    "LogSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "LogSubnetA" }
      }
    },

    "Log1SubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "Log1SubnetA" }
      }
    },

    "BuildSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "BuildSubnetA" }
      }
    },

    "IdentitySubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableA" },
        "SubnetId" : { "Ref" : "IdentitySubnetA" }
      }
    },

    "PrivateRouteTableB" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-PrivateRouteTableB" }}
        ]
      }
    },

    "PrivateDefaultRouteB" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Fn::If" : [ "ConfigureMultiZoneNatGateways", { "Ref" : "NatGatewayB" }, { "Ref" : "NatGatewayA" }]}
      }
    },

    "ApplicationSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "ApplicationSubnetB" }
      }
    },

    "Application1SubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "Application1SubnetB" }
      }
    },

    "Application2SubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "Application2SubnetB" }
      }
    },

    "Application3SubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "Application3SubnetB" }
      }
    },

    "QueueSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "QueueSubnetB" }
      }
    },

    "Queue1SubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "Queue1SubnetB" }
      }
    },

    "DatabaseSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "DatabaseSubnetB" }
      }
    },

    "Database1SubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "Database1SubnetB" }
      }
    },

    "LogSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "LogSubnetB" }
      }
    },

    "Log1SubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "Log1SubnetB" }
      }
    },

    "BuildSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "BuildSubnetB" }
      }
    },

    "IdentitySubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTableB" },
        "SubnetId" : { "Ref" : "IdentitySubnetB" }
      }
    },

    "VPNGateway" : {
      "Type" : "AWS::EC2::VPNGateway",
      "Properties" : {
        "Type" : "ipsec.1",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${Name}-VPNGateway" }}
        ]
      },
      "Condition" : "ConfigureVPNGateway"
    },

    "VPNGatewayAttachment" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "VpnGatewayId" : { "Ref" : "VPNGateway" }
      },
      "Condition" : "ConfigureVPNGateway"
    },

    "VPNGatewayRoutePropagation" : {
      "Type" : "AWS::EC2::VPNGatewayRoutePropagation",
      "Properties" : {
        "VpnGatewayId" : { "Ref" : "VPNGateway" },
        "RouteTableIds" : [{ "Ref" : "PublicRouteTable" }, { "Ref" : "PrivateRouteTableA" }, { "Ref" : "PrivateRouteTableB" }]
      },
      "DependsOn" : "VPNGatewayAttachment",
      "Condition" : "ConfigureVPNGateway"
    }
  },

  "Outputs" : {
    "VPC" : {
      "Description" : "The VPC",
      "Value" :  { "Ref" : "VPC" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPC" }}
    },

    "VPCName" : {
      "Description" : "The VPC Name",
      "Value" :  { "Ref" : "Name" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCName" }}
    },

    "VPCNetwork" : {
      "Description" : "The VPC Network",
      "Value" :  { "Fn::GetAtt" : [ "VPC", "CidrBlock" ]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCNetwork" }}
    },

    "VPCDomain" : {
      "Description" : "The VPC Domain",
      "Value" :  { "Fn::ImportValue" : { "Fn::Sub" : "${HostedZoneStackName}-Domain" }},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPCDomain" }},
      "Condition" : "ConfigureDomainNames"
    },

    "PublicHostedZone" : {
      "Description" : "The Public HostedZone",
      "Value" : { "Fn::ImportValue" : { "Fn::Sub" : "${HostedZoneStackName}-HostedZone" }},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicHostedZone" }},
      "Condition" : "ConfigureDomainNames"
    },

    "VPNGateway" : {
      "Description" : "The VPNGateway",
      "Value" :  { "Ref" : "VPNGateway" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-VPNGateway" }},
      "Condition" : "ConfigureVPNGateway"
    },

    "ZoneA" : {
      "Description" : "The AvailabilityZone used for ZoneA",
      "Value" :  { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" }]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ZoneA" }}
    },

    "ZoneB" : {
      "Description" : "The AvailabilityZone used for ZoneB",
      "Value" :  { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" }]},
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ZoneB" }}
    },

    "PublicSubnetA" : {
      "Description" : "The Public Subnet in Availability Zone A",
      "Value" :  { "Ref" : "PublicSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicSubnetA" }}
    },

    "PublicSubnetB" : {
      "Description" : "The Public Subnet in Availability Zone B",
      "Value" :  { "Ref" : "PublicSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicSubnetB" }}
    },

    "Public1SubnetA" : {
      "Description" : "The Public1 Subnet in Availability Zone A",
      "Value" :  { "Ref" : "Public1SubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Public1SubnetA" }}
    },

    "Public1SubnetB" : {
      "Description" : "The Public1 Subnet in Availability Zone B",
      "Value" :  { "Ref" : "Public1SubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Public1SubnetB" }}
    },

    "WebSubnetA" : {
      "Description" : "The Web Subnet in Availability Zone A",
      "Value" :  { "Ref" : "WebSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-WebSubnetA" }}
    },

    "WebSubnetB" : {
      "Description" : "The Web Subnet in Availability Zone B",
      "Value" :  { "Ref" : "WebSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-WebSubnetB" }}
    },

    "ApplicationSubnetA" : {
      "Description" : "The Application Subnet in Availability Zone A",
      "Value" :  { "Ref" : "ApplicationSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ApplicationSubnetA" }}
    },

    "ApplicationSubnetB" : {
      "Description" : "The Application Subnet in Availability Zone B",
      "Value" :  { "Ref" : "ApplicationSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-ApplicationSubnetB" }}
    },

    "Application1SubnetA" : {
      "Description" : "The Application1 Subnet in Availability Zone A",
      "Value" :  { "Ref" : "Application1SubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Application1SubnetA" }}
    },

    "Application1SubnetB" : {
      "Description" : "The Application1 Subnet in Availability Zone B",
      "Value" :  { "Ref" : "Application1SubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Application1SubnetB" }}
    },

    "Application2SubnetA" : {
      "Description" : "The Application2 Subnet in Availability Zone A",
      "Value" :  { "Ref" : "Application2SubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Application2SubnetA" }}
    },

    "Application2SubnetB" : {
      "Description" : "The Application2 Subnet in Availability Zone B",
      "Value" :  { "Ref" : "Application2SubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Application2SubnetB" }}
    },

    "Application3SubnetA" : {
      "Description" : "The Application3 Subnet in Availability Zone A",
      "Value" :  { "Ref" : "Application3SubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Application3SubnetA" }}
    },

    "Application3SubnetB" : {
      "Description" : "The Application3 Subnet in Availability Zone B",
      "Value" :  { "Ref" : "Application3SubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Application3SubnetB" }}
    },

    "QueueSubnetA" : {
      "Description" : "The Queue Subnet in Availability Zone A",
      "Value" :  { "Ref" : "QueueSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-QueueSubnetA" }}
    },

    "QueueSubnetB" : {
      "Description" : "The Queue Subnet in Availability Zone B",
      "Value" :  { "Ref" : "QueueSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-QueueSubnetB" }}
    },

    "Queue1SubnetA" : {
      "Description" : "The Queue1 Subnet in Availability Zone A",
      "Value" :  { "Ref" : "Queue1SubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Queue1SubnetA" }}
    },

    "Queue1SubnetB" : {
      "Description" : "The Queue1 Subnet in Availability Zone B",
      "Value" :  { "Ref" : "Queue1SubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Queue1SubnetB" }}
    },

    "DatabaseSubnetA" : {
      "Description" : "The Database Subnet in Availability Zone A",
      "Value" :  { "Ref" : "DatabaseSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-DatabaseSubnetA" }}
    },

    "DatabaseSubnetB" : {
      "Description" : "The Database Subnet in Availability Zone B",
      "Value" :  { "Ref" : "DatabaseSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-DatabaseSubnetB" }}
    },

    "Database1SubnetA" : {
      "Description" : "The Database1 Subnet in Availability Zone A",
      "Value" :  { "Ref" : "Database1SubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Database1SubnetA" }}
    },

    "Database1SubnetB" : {
      "Description" : "The Database1 Subnet in Availability Zone B",
      "Value" :  { "Ref" : "Database1SubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Database1SubnetB" }}
    },

    "LogSubnetA" : {
      "Description" : "The Log Subnet in Availability Zone A",
      "Value" :  { "Ref" : "LogSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-LogSubnetA" }}
    },

    "LogSubnetB" : {
      "Description" : "The Log Subnet in Availability Zone B",
      "Value" :  { "Ref" : "LogSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-LogSubnetB" }}
    },

    "Log1SubnetA" : {
      "Description" : "The Log1 Subnet in Availability Zone A",
      "Value" :  { "Ref" : "Log1SubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Log1SubnetA" }}
    },

    "Log1SubnetB" : {
      "Description" : "The Log1 Subnet in Availability Zone B",
      "Value" :  { "Ref" : "Log1SubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-Log1SubnetB" }}
    },

    "BuildSubnetA" : {
      "Description" : "The Build Subnet in Availability Zone A",
      "Value" :  { "Ref" : "BuildSubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-BuildSubnetA" }}
    },

    "BuildSubnetB" : {
      "Description" : "The Build Subnet in Availability Zone B",
      "Value" :  { "Ref" : "BuildSubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-BuildSubnetB" }}
    },

    "IdentitySubnetA" : {
      "Description" : "The Identity Subnet in Availability Zone A",
      "Value" :  { "Ref" : "IdentitySubnetA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-IdentitySubnetA" }}
    },

    "IdentitySubnetB" : {
      "Description" : "The Identity Subnet in Availability Zone B",
      "Value" :  { "Ref" : "IdentitySubnetB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-IdentitySubnetB" }}
    },

    "PublicRouteTable" : {
      "Description" : "The Public RouteTable",
      "Value" :  { "Ref" : "PublicRouteTable" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PublicRouteTable" }}
    },

    "PrivateRouteTableA" : {
      "Description" : "The Private RouteTable in Availability Zone A",
      "Value" :  { "Ref" : "PrivateRouteTableA" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivateRouteTableA" }}
    },

    "PrivateRouteTableB" : {
      "Description" : "The Private RouteTable in Availability Zone B",
      "Value" :  { "Ref" : "PrivateRouteTableB" },
      "Export" : { "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivateRouteTableB" }}
    }
  }
}
